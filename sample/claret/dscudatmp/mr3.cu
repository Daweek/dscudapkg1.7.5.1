static char *Ptxdata = 
    "//\n"
    "// Generated by NVIDIA NVVM Compiler\n"
    "// Compiler built on Sat Mar 15 08:49:40 2014 (1394873380)\n"
    "// Cuda compilation tools, release 6.0, V6.0.1\n"
    "//\n"
    "\n"
    ".version 4.0\n"
    ".target sm_20\n"
    ".address_size 32\n"
    "\n"
    ".const .align 4 .b8 c_matrix[96] = {0, 0, 160, 63, 143, 194, 21, 64, 138, 228, 73, 64, 209, 59, 149, 61, 138, 32, 14, 61, 0, 0, 128, 63, 0, 0, 128, 63, 236, 81, 48, 64, 138, 228, 73, 64, 174, 184, 248, 62, 50, 87, 26, 63, 0, 0, 128, 191, 0, 0, 128, 63, 236, 81, 48, 64, 138, 228, 73, 64, 174, 184, 248, 62, 50, 87, 26, 63, 0, 0, 128, 191, 0, 0, 64, 63, 72, 225, 74, 64, 138, 228, 73, 64, 176, 0, 161, 64, 89, 178, 33, 65, 0, 0, 128, 63};\n"
    "// _Z15nacl_kernel_if2P7VG_XVECiifPf$__cuda_local_var_37647_34_non_const_s_xj has been demoted\n"
    "// _Z15nacl_kernel_if2P7VG_XVECiifPf$__cuda_local_var_37648_32_non_const_s_fi has been demoted\n"
    "// _Z15velforce_kerneliPfS_S_P7VG_XVECPifS_$__cuda_local_var_37736_32_non_const_cache has been demoted\n"
    "\n"
    ".visible .entry _Z18update_coor_kerneliPfP7VG_XVECS_S_S_(\n"
    "	.param .u32 _Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_0,\n"
    "	.param .u32 _Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_1,\n"
    "	.param .u32 _Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_2,\n"
    "	.param .u32 _Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_3,\n"
    "	.param .u32 _Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_4,\n"
    "	.param .u32 _Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_5\n"
    ")\n"
    "{\n"
    "	.reg .pred 	%p<4>;\n"
    "	.reg .s32 	%r<30>;\n"
    "	.reg .f32 	%f<14>;\n"
    "	.reg .s64 	%rd<4>;\n"
    "\n"
    "\n"
    "	ld.param.u32 	%r9, [_Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_0];\n"
    "	ld.param.u32 	%r4, [_Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_1];\n"
    "	ld.param.u32 	%r5, [_Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_2];\n"
    "	ld.param.u32 	%r6, [_Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_3];\n"
    "	ld.param.u32 	%r7, [_Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_4];\n"
    "	ld.param.u32 	%r8, [_Z18update_coor_kerneliPfP7VG_XVECS_S_S__param_5];\n"
    "	mov.u32 	%r10, %ntid.x;\n"
    "	mov.u32 	%r11, %ctaid.x;\n"
    "	mov.u32 	%r12, %tid.x;\n"
    "	mad.lo.s32 	%r1, %r10, %r11, %r12;\n"
    "	setp.ge.s32	%p1, %r1, %r9;\n"
    "	@%p1 bra 	BB0_4;\n"
    "\n"
    "	cvta.to.global.u32 	%r13, %r5;\n"
    "	cvta.to.global.u32 	%r14, %r7;\n"
    "	cvta.to.global.u32 	%r15, %r6;\n"
    "	cvta.to.global.u32 	%r16, %r4;\n"
    "	ld.global.f32 	%f2, [%r15];\n"
    "	mov.f32 	%f3, 0f3F800000;\n"
    "	sub.f32 	%f4, %f3, %f2;\n"
    "	shl.b32 	%r17, %r1, 2;\n"
    "	add.s32 	%r2, %r16, %r17;\n"
    "	ld.global.f32 	%f5, [%r2];\n"
    "	add.s32 	%r18, %r14, %r17;\n"
    "	ld.global.f32 	%f6, [%r18];\n"
    "	fma.rn.f32 	%f7, %f5, %f4, %f6;\n"
    "	add.f32 	%f8, %f2, 0f3F800000;\n"
    "	div.rn.f32 	%f9, %f7, %f8;\n"
    "	st.global.f32 	[%r2], %f9;\n"
    "	mul.wide.s32 	%rd1, %r1, 1431655766;\n"
    "	shr.u64 	%rd2, %rd1, 63;\n"
    "	cvt.u32.u64	%r19, %rd2;\n"
    "	shr.u64 	%rd3, %rd1, 32;\n"
    "	cvt.u32.u64	%r20, %rd3;\n"
    "	add.s32 	%r21, %r20, %r19;\n"
    "	mul.lo.s32 	%r22, %r21, 3;\n"
    "	sub.s32 	%r3, %r1, %r22;\n"
    "	shl.b32 	%r23, %r21, 4;\n"
    "	add.s32 	%r24, %r13, %r23;\n"
    "	shl.b32 	%r25, %r3, 2;\n"
    "	add.s32 	%r26, %r24, %r25;\n"
    "	ld.global.f32 	%f10, [%r26];\n"
    "	add.f32 	%f1, %f10, %f9;\n"
    "	st.global.f32 	[%r26], %f1;\n"
    "	setp.lt.f32	%p2, %f1, 0f00000000;\n"
    "	@%p2 bra 	BB0_3;\n"
    "\n"
    "	cvta.to.global.u32 	%r27, %r8;\n"
    "	add.s32 	%r29, %r27, %r25;\n"
    "	ld.global.f32 	%f11, [%r29];\n"
    "	setp.leu.f32	%p3, %f1, %f11;\n"
    "	@%p3 bra 	BB0_4;\n"
    "\n"
    "BB0_3:\n"
    "	ld.global.f32 	%f12, [%r2];\n"
    "	neg.f32 	%f13, %f12;\n"
    "	st.global.f32 	[%r2], %f13;\n"
    "\n"
    "BB0_4:\n"
    "	ret;\n"
    "}\n"
    "\n"
    ".visible .entry _Z15nacl_kernel_if2P7VG_XVECiifPf(\n"
    "	.param .u32 _Z15nacl_kernel_if2P7VG_XVECiifPf_param_0,\n"
    "	.param .u32 _Z15nacl_kernel_if2P7VG_XVECiifPf_param_1,\n"
    "	.param .u32 _Z15nacl_kernel_if2P7VG_XVECiifPf_param_2,\n"
    "	.param .f32 _Z15nacl_kernel_if2P7VG_XVECiifPf_param_3,\n"
    "	.param .u32 _Z15nacl_kernel_if2P7VG_XVECiifPf_param_4\n"
    ")\n"
    "{\n"
    "	.reg .pred 	%p<70>;\n"
    "	.reg .s32 	%r<170>;\n"
    "	.reg .f32 	%f<1220>;\n"
    "	// demoted variable\n"
    "	.shared .align 4 .b8 _Z15nacl_kernel_if2P7VG_XVECiifPf$__cuda_local_var_37647_34_non_const_s_xj[4096];\n"
    "	// demoted variable\n"
    "	.shared .align 4 .b8 _Z15nacl_kernel_if2P7VG_XVECiifPf$__cuda_local_var_37648_32_non_const_s_fi[3072];\n"
    "\n"
    "	ld.param.u32 	%r18, [_Z15nacl_kernel_if2P7VG_XVECiifPf_param_0];\n"
    "	ld.param.u32 	%r19, [_Z15nacl_kernel_if2P7VG_XVECiifPf_param_1];\n"
    "	ld.param.u32 	%r21, [_Z15nacl_kernel_if2P7VG_XVECiifPf_param_2];\n"
    "	ld.param.f32 	%f5, [_Z15nacl_kernel_if2P7VG_XVECiifPf_param_3];\n"
    "	ld.param.u32 	%r20, [_Z15nacl_kernel_if2P7VG_XVECiifPf_param_4];\n"
    "	cvta.to.global.u32 	%r22, %r18;\n"
    "	mov.u32 	%r23, %ctaid.x;\n"
    "	shl.b32 	%r24, %r23, 4;\n"
    "	mov.u32 	%r25, %tid.x;\n"
    "	and.b32  	%r26, %r25, 15;\n"
    "	add.s32 	%r27, %r24, %r26;\n"
    "	mov.u32 	%r28, _Z15nacl_kernel_if2P7VG_XVECiifPf$__cuda_local_var_37648_32_non_const_s_fi;\n"
    "	mad.lo.s32 	%r29, %r25, 12, %r28;\n"
    "	mov.u32 	%r164, 0;\n"
    "	st.shared.u32 	[%r29], %r164;\n"
    "	st.shared.u32 	[%r29+4], %r164;\n"
    "	st.shared.u32 	[%r29+8], %r164;\n"
    "	shr.s32 	%r31, %r25, 31;\n"
    "	shr.u32 	%r32, %r31, 28;\n"
    "	add.s32 	%r33, %r25, %r32;\n"
    "	shr.s32 	%r1, %r33, 4;\n"
    "	rcp.rn.f32 	%f1, %f5;\n"
    "	shl.b32 	%r34, %r27, 4;\n"
    "	add.s32 	%r35, %r22, %r34;\n"
    "	ld.global.f32 	%f2, [%r35];\n"
    "	ld.global.f32 	%f3, [%r35+4];\n"
    "	ld.global.f32 	%f4, [%r35+8];\n"
    "	ld.global.u32 	%r36, [%r35+12];\n"
    "	mul.lo.s32 	%r2, %r36, %r21;\n"
    "	shr.s32 	%r37, %r19, 31;\n"
    "	shr.u32 	%r38, %r37, 24;\n"
    "	add.s32 	%r39, %r19, %r38;\n"
    "	and.b32  	%r3, %r39, -256;\n"
    "	setp.lt.s32	%p2, %r3, 1;\n"
    "	@%p2 bra 	BB1_8;\n"
    "\n"
    "	mov.u32 	%r41, 256;\n"
    "	sub.s32 	%r42, %r41, %r1;\n"
    "	and.b32  	%r43, %r42, 15;\n"
    "	setp.ne.s32	%p3, %r43, 0;\n"
    "	selp.u32	%r44, 1, 0, %p3;\n"
    "	shr.s32 	%r45, %r42, 31;\n"
    "	shr.u32 	%r46, %r45, 28;\n"
    "	add.s32 	%r47, %r42, %r46;\n"
    "	shr.s32 	%r48, %r47, 4;\n"
    "	add.s32 	%r49, %r48, %r44;\n"
    "	shr.s32 	%r50, %r49, 31;\n"
    "	shr.u32 	%r51, %r50, 28;\n"
    "	add.s32 	%r52, %r49, %r51;\n"
    "	shl.b32 	%r53, %r52, 4;\n"
    "	and.b32  	%r54, %r53, -256;\n"
    "	add.s32 	%r4, %r1, %r54;\n"
    "\n"
    "BB1_2:\n"
    "	setp.lt.s32	%p1, %r25, 4096;\n"
    "	bar.sync 	0;\n"
    "	add.s32 	%r55, %r164, %r25;\n"
    "	shl.b32 	%r56, %r55, 4;\n"
    "	add.s32 	%r57, %r22, %r56;\n"
    "	shl.b32 	%r58, %r25, 4;\n"
    "	mov.u32 	%r59, _Z15nacl_kernel_if2P7VG_XVECiifPf$__cuda_local_var_37647_34_non_const_s_xj;\n"
    "	add.s32 	%r60, %r59, %r58;\n"
    "	ld.global.f32 	%f6, [%r57];\n"
    "	ld.global.f32 	%f7, [%r57+4];\n"
    "	ld.global.f32 	%f8, [%r57+8];\n"
    "	ld.global.u32 	%r61, [%r57+12];\n"
    "	st.shared.u32 	[%r60+12], %r61;\n"
    "	st.shared.f32 	[%r60+8], %f8;\n"
    "	st.shared.f32 	[%r60+4], %f7;\n"
    "	st.shared.f32 	[%r60], %f6;\n"
    "	bar.sync 	0;\n"
    "	@!%p1 bra 	BB1_7;\n"
    "	bra.uni 	BB1_3;\n"
    "\n"
    "BB1_3:\n"
    "	setp.le.s32	%p4, %r4, %r1;\n"
    "	mov.u32 	%r167, %r1;\n"
    "	mov.u32 	%r168, %r1;\n"
    "	@%p4 bra 	BB1_6;\n"
    "\n"
    "BB1_4:\n"
    "	.pragma \"nounroll\";\n"
    "	mov.u32 	%r8, %r168;\n"
    "	shl.b32 	%r62, %r8, 4;\n"
    "	add.s32 	%r64, %r59, %r62;\n"
    "	ld.shared.f32 	%f41, [%r64];\n"
    "	sub.f32 	%f42, %f2, %f41;\n"
    "	mul.f32 	%f43, %f42, %f1;\n"
    "	cvt.rni.f32.f32	%f44, %f43;\n"
    "	mul.f32 	%f45, %f44, %f5;\n"
    "	sub.f32 	%f46, %f42, %f45;\n"
    "	fma.rn.f32 	%f47, %f46, %f46, 0f00000000;\n"
    "	ld.shared.f32 	%f48, [%r64+4];\n"
    "	sub.f32 	%f49, %f3, %f48;\n"
    "	mul.f32 	%f50, %f49, %f1;\n"
    "	cvt.rni.f32.f32	%f51, %f50;\n"
    "	mul.f32 	%f52, %f51, %f5;\n"
    "	sub.f32 	%f53, %f49, %f52;\n"
    "	fma.rn.f32 	%f54, %f53, %f53, %f47;\n"
    "	ld.shared.f32 	%f55, [%r64+8];\n"
    "	sub.f32 	%f56, %f4, %f55;\n"
    "	mul.f32 	%f57, %f56, %f1;\n"
    "	cvt.rni.f32.f32	%f58, %f57;\n"
    "	mul.f32 	%f59, %f58, %f5;\n"
    "	sub.f32 	%f60, %f56, %f59;\n"
    "	fma.rn.f32 	%f61, %f60, %f60, %f54;\n"
    "	ld.shared.u32 	%r65, [%r64+12];\n"
    "	add.s32 	%r66, %r65, %r2;\n"
    "	sqrt.rn.f32 	%f62, %f61;\n"
    "	rcp.rn.f32 	%f63, %f62;\n"
    "	mul.f32 	%f64, %f63, %f63;\n"
    "	mul.f32 	%f65, %f64, %f64;\n"
    "	mul.f32 	%f66, %f65, %f65;\n"
    "	mov.u32 	%r67, c_matrix;\n"
    "	mad.lo.s32 	%r68, %r66, 24, %r67;\n"
    "	ld.const.f32 	%f67, [%r68];\n"
    "	mul.f32 	%f68, %f67, 0f3C70319E;\n"
    "	ld.const.f32 	%f69, [%r68+4];\n"
    "	sub.f32 	%f70, %f69, %f62;\n"
    "	ld.const.f32 	%f71, [%r68+8];\n"
    "	mul.f32 	%f72, %f70, %f71;\n"
    "	mul.f32 	%f73, %f72, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f74, %f73;\n"
    "	mov.f32 	%f75, 0fBF317200;\n"
    "	fma.rn.f32 	%f76, %f74, %f75, %f72;\n"
    "	mov.f32 	%f77, 0fB5BFBE8E;\n"
    "	fma.rn.f32 	%f78, %f74, %f77, %f76;\n"
    "	mul.f32 	%f10, %f78, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f9,%f10;\n"
    "	// inline asm\n"
    "	add.f32 	%f79, %f74, 0f00000000;\n"
    "	ex2.approx.f32 	%f80, %f79;\n"
    "	mul.f32 	%f81, %f9, %f80;\n"
    "	setp.lt.f32	%p5, %f72, 0fC2D20000;\n"
    "	selp.f32	%f82, 0f00000000, %f81, %p5;\n"
    "	setp.gt.f32	%p6, %f72, 0f42D20000;\n"
    "	selp.f32	%f83, 0f7F800000, %f82, %p6;\n"
    "	mul.f32 	%f84, %f68, %f83;\n"
    "	mul.f32 	%f85, %f84, %f71;\n"
    "	mul.f32 	%f86, %f85, %f63;\n"
    "	ld.const.f32 	%f87, [%r68+12];\n"
    "	mul.f32 	%f88, %f87, 0f40C00000;\n"
    "	mul.f32 	%f89, %f88, %f66;\n"
    "	sub.f32 	%f90, %f86, %f89;\n"
    "	ld.const.f32 	%f91, [%r68+16];\n"
    "	mul.f32 	%f92, %f91, 0f41000000;\n"
    "	mul.f32 	%f93, %f92, %f66;\n"
    "	mul.f32 	%f94, %f93, %f64;\n"
    "	sub.f32 	%f95, %f90, %f94;\n"
    "	mul.f32 	%f96, %f64, %f63;\n"
    "	ld.const.f32 	%f97, [%r68+20];\n"
    "	fma.rn.f32 	%f98, %f96, %f97, %f95;\n"
    "	setp.eq.f32	%p7, %f61, 0f00000000;\n"
    "	selp.f32	%f99, 0f00000000, %f98, %p7;\n"
    "	ld.shared.f32 	%f100, [%r29];\n"
    "	fma.rn.f32 	%f101, %f99, %f46, %f100;\n"
    "	ld.shared.f32 	%f102, [%r29+4];\n"
    "	ld.shared.f32 	%f103, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f101;\n"
    "	fma.rn.f32 	%f104, %f99, %f53, %f102;\n"
    "	st.shared.f32 	[%r29+4], %f104;\n"
    "	fma.rn.f32 	%f105, %f99, %f60, %f103;\n"
    "	st.shared.f32 	[%r29+8], %f105;\n"
    "	ld.shared.f32 	%f106, [%r64+256];\n"
    "	sub.f32 	%f107, %f2, %f106;\n"
    "	mul.f32 	%f108, %f107, %f1;\n"
    "	cvt.rni.f32.f32	%f109, %f108;\n"
    "	mul.f32 	%f110, %f109, %f5;\n"
    "	sub.f32 	%f111, %f107, %f110;\n"
    "	fma.rn.f32 	%f112, %f111, %f111, 0f00000000;\n"
    "	ld.shared.f32 	%f113, [%r64+260];\n"
    "	sub.f32 	%f114, %f3, %f113;\n"
    "	mul.f32 	%f115, %f114, %f1;\n"
    "	cvt.rni.f32.f32	%f116, %f115;\n"
    "	mul.f32 	%f117, %f116, %f5;\n"
    "	sub.f32 	%f118, %f114, %f117;\n"
    "	fma.rn.f32 	%f119, %f118, %f118, %f112;\n"
    "	ld.shared.f32 	%f120, [%r64+264];\n"
    "	sub.f32 	%f121, %f4, %f120;\n"
    "	mul.f32 	%f122, %f121, %f1;\n"
    "	cvt.rni.f32.f32	%f123, %f122;\n"
    "	mul.f32 	%f124, %f123, %f5;\n"
    "	sub.f32 	%f125, %f121, %f124;\n"
    "	fma.rn.f32 	%f126, %f125, %f125, %f119;\n"
    "	ld.shared.u32 	%r72, [%r64+268];\n"
    "	add.s32 	%r73, %r72, %r2;\n"
    "	sqrt.rn.f32 	%f127, %f126;\n"
    "	rcp.rn.f32 	%f128, %f127;\n"
    "	mul.f32 	%f129, %f128, %f128;\n"
    "	mul.f32 	%f130, %f129, %f129;\n"
    "	mul.f32 	%f131, %f130, %f130;\n"
    "	mad.lo.s32 	%r74, %r73, 24, %r67;\n"
    "	ld.const.f32 	%f132, [%r74];\n"
    "	mul.f32 	%f133, %f132, 0f3C70319E;\n"
    "	ld.const.f32 	%f134, [%r74+4];\n"
    "	sub.f32 	%f135, %f134, %f127;\n"
    "	ld.const.f32 	%f136, [%r74+8];\n"
    "	mul.f32 	%f137, %f135, %f136;\n"
    "	mul.f32 	%f138, %f137, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f139, %f138;\n"
    "	fma.rn.f32 	%f140, %f139, %f75, %f137;\n"
    "	fma.rn.f32 	%f141, %f139, %f77, %f140;\n"
    "	mul.f32 	%f12, %f141, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f11,%f12;\n"
    "	// inline asm\n"
    "	add.f32 	%f142, %f139, 0f00000000;\n"
    "	ex2.approx.f32 	%f143, %f142;\n"
    "	mul.f32 	%f144, %f11, %f143;\n"
    "	setp.lt.f32	%p8, %f137, 0fC2D20000;\n"
    "	selp.f32	%f145, 0f00000000, %f144, %p8;\n"
    "	setp.gt.f32	%p9, %f137, 0f42D20000;\n"
    "	selp.f32	%f146, 0f7F800000, %f145, %p9;\n"
    "	mul.f32 	%f147, %f133, %f146;\n"
    "	mul.f32 	%f148, %f147, %f136;\n"
    "	mul.f32 	%f149, %f148, %f128;\n"
    "	ld.const.f32 	%f150, [%r74+12];\n"
    "	mul.f32 	%f151, %f150, 0f40C00000;\n"
    "	mul.f32 	%f152, %f151, %f131;\n"
    "	sub.f32 	%f153, %f149, %f152;\n"
    "	ld.const.f32 	%f154, [%r74+16];\n"
    "	mul.f32 	%f155, %f154, 0f41000000;\n"
    "	mul.f32 	%f156, %f155, %f131;\n"
    "	mul.f32 	%f157, %f156, %f129;\n"
    "	sub.f32 	%f158, %f153, %f157;\n"
    "	mul.f32 	%f159, %f129, %f128;\n"
    "	ld.const.f32 	%f160, [%r74+20];\n"
    "	fma.rn.f32 	%f161, %f159, %f160, %f158;\n"
    "	setp.eq.f32	%p10, %f126, 0f00000000;\n"
    "	selp.f32	%f162, 0f00000000, %f161, %p10;\n"
    "	ld.shared.f32 	%f163, [%r29];\n"
    "	fma.rn.f32 	%f164, %f162, %f111, %f163;\n"
    "	ld.shared.f32 	%f165, [%r29+4];\n"
    "	ld.shared.f32 	%f166, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f164;\n"
    "	fma.rn.f32 	%f167, %f162, %f118, %f165;\n"
    "	st.shared.f32 	[%r29+4], %f167;\n"
    "	fma.rn.f32 	%f168, %f162, %f125, %f166;\n"
    "	st.shared.f32 	[%r29+8], %f168;\n"
    "	ld.shared.f32 	%f169, [%r64+512];\n"
    "	sub.f32 	%f170, %f2, %f169;\n"
    "	mul.f32 	%f171, %f170, %f1;\n"
    "	cvt.rni.f32.f32	%f172, %f171;\n"
    "	mul.f32 	%f173, %f172, %f5;\n"
    "	sub.f32 	%f174, %f170, %f173;\n"
    "	fma.rn.f32 	%f175, %f174, %f174, 0f00000000;\n"
    "	ld.shared.f32 	%f176, [%r64+516];\n"
    "	sub.f32 	%f177, %f3, %f176;\n"
    "	mul.f32 	%f178, %f177, %f1;\n"
    "	cvt.rni.f32.f32	%f179, %f178;\n"
    "	mul.f32 	%f180, %f179, %f5;\n"
    "	sub.f32 	%f181, %f177, %f180;\n"
    "	fma.rn.f32 	%f182, %f181, %f181, %f175;\n"
    "	ld.shared.f32 	%f183, [%r64+520];\n"
    "	sub.f32 	%f184, %f4, %f183;\n"
    "	mul.f32 	%f185, %f184, %f1;\n"
    "	cvt.rni.f32.f32	%f186, %f185;\n"
    "	mul.f32 	%f187, %f186, %f5;\n"
    "	sub.f32 	%f188, %f184, %f187;\n"
    "	fma.rn.f32 	%f189, %f188, %f188, %f182;\n"
    "	ld.shared.u32 	%r75, [%r64+524];\n"
    "	add.s32 	%r76, %r75, %r2;\n"
    "	sqrt.rn.f32 	%f190, %f189;\n"
    "	rcp.rn.f32 	%f191, %f190;\n"
    "	mul.f32 	%f192, %f191, %f191;\n"
    "	mul.f32 	%f193, %f192, %f192;\n"
    "	mul.f32 	%f194, %f193, %f193;\n"
    "	mad.lo.s32 	%r77, %r76, 24, %r67;\n"
    "	ld.const.f32 	%f195, [%r77];\n"
    "	mul.f32 	%f196, %f195, 0f3C70319E;\n"
    "	ld.const.f32 	%f197, [%r77+4];\n"
    "	sub.f32 	%f198, %f197, %f190;\n"
    "	ld.const.f32 	%f199, [%r77+8];\n"
    "	mul.f32 	%f200, %f198, %f199;\n"
    "	mul.f32 	%f201, %f200, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f202, %f201;\n"
    "	fma.rn.f32 	%f203, %f202, %f75, %f200;\n"
    "	fma.rn.f32 	%f204, %f202, %f77, %f203;\n"
    "	mul.f32 	%f14, %f204, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f13,%f14;\n"
    "	// inline asm\n"
    "	add.f32 	%f205, %f202, 0f00000000;\n"
    "	ex2.approx.f32 	%f206, %f205;\n"
    "	mul.f32 	%f207, %f13, %f206;\n"
    "	setp.lt.f32	%p11, %f200, 0fC2D20000;\n"
    "	selp.f32	%f208, 0f00000000, %f207, %p11;\n"
    "	setp.gt.f32	%p12, %f200, 0f42D20000;\n"
    "	selp.f32	%f209, 0f7F800000, %f208, %p12;\n"
    "	mul.f32 	%f210, %f196, %f209;\n"
    "	mul.f32 	%f211, %f210, %f199;\n"
    "	mul.f32 	%f212, %f211, %f191;\n"
    "	ld.const.f32 	%f213, [%r77+12];\n"
    "	mul.f32 	%f214, %f213, 0f40C00000;\n"
    "	mul.f32 	%f215, %f214, %f194;\n"
    "	sub.f32 	%f216, %f212, %f215;\n"
    "	ld.const.f32 	%f217, [%r77+16];\n"
    "	mul.f32 	%f218, %f217, 0f41000000;\n"
    "	mul.f32 	%f219, %f218, %f194;\n"
    "	mul.f32 	%f220, %f219, %f192;\n"
    "	sub.f32 	%f221, %f216, %f220;\n"
    "	mul.f32 	%f222, %f192, %f191;\n"
    "	ld.const.f32 	%f223, [%r77+20];\n"
    "	fma.rn.f32 	%f224, %f222, %f223, %f221;\n"
    "	setp.eq.f32	%p13, %f189, 0f00000000;\n"
    "	selp.f32	%f225, 0f00000000, %f224, %p13;\n"
    "	ld.shared.f32 	%f226, [%r29];\n"
    "	fma.rn.f32 	%f227, %f225, %f174, %f226;\n"
    "	ld.shared.f32 	%f228, [%r29+4];\n"
    "	ld.shared.f32 	%f229, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f227;\n"
    "	fma.rn.f32 	%f230, %f225, %f181, %f228;\n"
    "	st.shared.f32 	[%r29+4], %f230;\n"
    "	fma.rn.f32 	%f231, %f225, %f188, %f229;\n"
    "	st.shared.f32 	[%r29+8], %f231;\n"
    "	ld.shared.f32 	%f232, [%r64+768];\n"
    "	sub.f32 	%f233, %f2, %f232;\n"
    "	mul.f32 	%f234, %f233, %f1;\n"
    "	cvt.rni.f32.f32	%f235, %f234;\n"
    "	mul.f32 	%f236, %f235, %f5;\n"
    "	sub.f32 	%f237, %f233, %f236;\n"
    "	fma.rn.f32 	%f238, %f237, %f237, 0f00000000;\n"
    "	ld.shared.f32 	%f239, [%r64+772];\n"
    "	sub.f32 	%f240, %f3, %f239;\n"
    "	mul.f32 	%f241, %f240, %f1;\n"
    "	cvt.rni.f32.f32	%f242, %f241;\n"
    "	mul.f32 	%f243, %f242, %f5;\n"
    "	sub.f32 	%f244, %f240, %f243;\n"
    "	fma.rn.f32 	%f245, %f244, %f244, %f238;\n"
    "	ld.shared.f32 	%f246, [%r64+776];\n"
    "	sub.f32 	%f247, %f4, %f246;\n"
    "	mul.f32 	%f248, %f247, %f1;\n"
    "	cvt.rni.f32.f32	%f249, %f248;\n"
    "	mul.f32 	%f250, %f249, %f5;\n"
    "	sub.f32 	%f251, %f247, %f250;\n"
    "	fma.rn.f32 	%f252, %f251, %f251, %f245;\n"
    "	ld.shared.u32 	%r78, [%r64+780];\n"
    "	add.s32 	%r79, %r78, %r2;\n"
    "	sqrt.rn.f32 	%f253, %f252;\n"
    "	rcp.rn.f32 	%f254, %f253;\n"
    "	mul.f32 	%f255, %f254, %f254;\n"
    "	mul.f32 	%f256, %f255, %f255;\n"
    "	mul.f32 	%f257, %f256, %f256;\n"
    "	mad.lo.s32 	%r80, %r79, 24, %r67;\n"
    "	ld.const.f32 	%f258, [%r80];\n"
    "	mul.f32 	%f259, %f258, 0f3C70319E;\n"
    "	ld.const.f32 	%f260, [%r80+4];\n"
    "	sub.f32 	%f261, %f260, %f253;\n"
    "	ld.const.f32 	%f262, [%r80+8];\n"
    "	mul.f32 	%f263, %f261, %f262;\n"
    "	mul.f32 	%f264, %f263, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f265, %f264;\n"
    "	fma.rn.f32 	%f266, %f265, %f75, %f263;\n"
    "	fma.rn.f32 	%f267, %f265, %f77, %f266;\n"
    "	mul.f32 	%f16, %f267, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f15,%f16;\n"
    "	// inline asm\n"
    "	add.f32 	%f268, %f265, 0f00000000;\n"
    "	ex2.approx.f32 	%f269, %f268;\n"
    "	mul.f32 	%f270, %f15, %f269;\n"
    "	setp.lt.f32	%p14, %f263, 0fC2D20000;\n"
    "	selp.f32	%f271, 0f00000000, %f270, %p14;\n"
    "	setp.gt.f32	%p15, %f263, 0f42D20000;\n"
    "	selp.f32	%f272, 0f7F800000, %f271, %p15;\n"
    "	mul.f32 	%f273, %f259, %f272;\n"
    "	mul.f32 	%f274, %f273, %f262;\n"
    "	mul.f32 	%f275, %f274, %f254;\n"
    "	ld.const.f32 	%f276, [%r80+12];\n"
    "	mul.f32 	%f277, %f276, 0f40C00000;\n"
    "	mul.f32 	%f278, %f277, %f257;\n"
    "	sub.f32 	%f279, %f275, %f278;\n"
    "	ld.const.f32 	%f280, [%r80+16];\n"
    "	mul.f32 	%f281, %f280, 0f41000000;\n"
    "	mul.f32 	%f282, %f281, %f257;\n"
    "	mul.f32 	%f283, %f282, %f255;\n"
    "	sub.f32 	%f284, %f279, %f283;\n"
    "	mul.f32 	%f285, %f255, %f254;\n"
    "	ld.const.f32 	%f286, [%r80+20];\n"
    "	fma.rn.f32 	%f287, %f285, %f286, %f284;\n"
    "	setp.eq.f32	%p16, %f252, 0f00000000;\n"
    "	selp.f32	%f288, 0f00000000, %f287, %p16;\n"
    "	ld.shared.f32 	%f289, [%r29];\n"
    "	fma.rn.f32 	%f290, %f288, %f237, %f289;\n"
    "	ld.shared.f32 	%f291, [%r29+4];\n"
    "	ld.shared.f32 	%f292, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f290;\n"
    "	fma.rn.f32 	%f293, %f288, %f244, %f291;\n"
    "	st.shared.f32 	[%r29+4], %f293;\n"
    "	fma.rn.f32 	%f294, %f288, %f251, %f292;\n"
    "	st.shared.f32 	[%r29+8], %f294;\n"
    "	ld.shared.f32 	%f295, [%r64+1024];\n"
    "	sub.f32 	%f296, %f2, %f295;\n"
    "	mul.f32 	%f297, %f296, %f1;\n"
    "	cvt.rni.f32.f32	%f298, %f297;\n"
    "	mul.f32 	%f299, %f298, %f5;\n"
    "	sub.f32 	%f300, %f296, %f299;\n"
    "	fma.rn.f32 	%f301, %f300, %f300, 0f00000000;\n"
    "	ld.shared.f32 	%f302, [%r64+1028];\n"
    "	sub.f32 	%f303, %f3, %f302;\n"
    "	mul.f32 	%f304, %f303, %f1;\n"
    "	cvt.rni.f32.f32	%f305, %f304;\n"
    "	mul.f32 	%f306, %f305, %f5;\n"
    "	sub.f32 	%f307, %f303, %f306;\n"
    "	fma.rn.f32 	%f308, %f307, %f307, %f301;\n"
    "	ld.shared.f32 	%f309, [%r64+1032];\n"
    "	sub.f32 	%f310, %f4, %f309;\n"
    "	mul.f32 	%f311, %f310, %f1;\n"
    "	cvt.rni.f32.f32	%f312, %f311;\n"
    "	mul.f32 	%f313, %f312, %f5;\n"
    "	sub.f32 	%f314, %f310, %f313;\n"
    "	fma.rn.f32 	%f315, %f314, %f314, %f308;\n"
    "	ld.shared.u32 	%r81, [%r64+1036];\n"
    "	add.s32 	%r82, %r81, %r2;\n"
    "	sqrt.rn.f32 	%f316, %f315;\n"
    "	rcp.rn.f32 	%f317, %f316;\n"
    "	mul.f32 	%f318, %f317, %f317;\n"
    "	mul.f32 	%f319, %f318, %f318;\n"
    "	mul.f32 	%f320, %f319, %f319;\n"
    "	mad.lo.s32 	%r83, %r82, 24, %r67;\n"
    "	ld.const.f32 	%f321, [%r83];\n"
    "	mul.f32 	%f322, %f321, 0f3C70319E;\n"
    "	ld.const.f32 	%f323, [%r83+4];\n"
    "	sub.f32 	%f324, %f323, %f316;\n"
    "	ld.const.f32 	%f325, [%r83+8];\n"
    "	mul.f32 	%f326, %f324, %f325;\n"
    "	mul.f32 	%f327, %f326, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f328, %f327;\n"
    "	fma.rn.f32 	%f329, %f328, %f75, %f326;\n"
    "	fma.rn.f32 	%f330, %f328, %f77, %f329;\n"
    "	mul.f32 	%f18, %f330, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f17,%f18;\n"
    "	// inline asm\n"
    "	add.f32 	%f331, %f328, 0f00000000;\n"
    "	ex2.approx.f32 	%f332, %f331;\n"
    "	mul.f32 	%f333, %f17, %f332;\n"
    "	setp.lt.f32	%p17, %f326, 0fC2D20000;\n"
    "	selp.f32	%f334, 0f00000000, %f333, %p17;\n"
    "	setp.gt.f32	%p18, %f326, 0f42D20000;\n"
    "	selp.f32	%f335, 0f7F800000, %f334, %p18;\n"
    "	mul.f32 	%f336, %f322, %f335;\n"
    "	mul.f32 	%f337, %f336, %f325;\n"
    "	mul.f32 	%f338, %f337, %f317;\n"
    "	ld.const.f32 	%f339, [%r83+12];\n"
    "	mul.f32 	%f340, %f339, 0f40C00000;\n"
    "	mul.f32 	%f341, %f340, %f320;\n"
    "	sub.f32 	%f342, %f338, %f341;\n"
    "	ld.const.f32 	%f343, [%r83+16];\n"
    "	mul.f32 	%f344, %f343, 0f41000000;\n"
    "	mul.f32 	%f345, %f344, %f320;\n"
    "	mul.f32 	%f346, %f345, %f318;\n"
    "	sub.f32 	%f347, %f342, %f346;\n"
    "	mul.f32 	%f348, %f318, %f317;\n"
    "	ld.const.f32 	%f349, [%r83+20];\n"
    "	fma.rn.f32 	%f350, %f348, %f349, %f347;\n"
    "	setp.eq.f32	%p19, %f315, 0f00000000;\n"
    "	selp.f32	%f351, 0f00000000, %f350, %p19;\n"
    "	ld.shared.f32 	%f352, [%r29];\n"
    "	fma.rn.f32 	%f353, %f351, %f300, %f352;\n"
    "	ld.shared.f32 	%f354, [%r29+4];\n"
    "	ld.shared.f32 	%f355, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f353;\n"
    "	fma.rn.f32 	%f356, %f351, %f307, %f354;\n"
    "	st.shared.f32 	[%r29+4], %f356;\n"
    "	fma.rn.f32 	%f357, %f351, %f314, %f355;\n"
    "	st.shared.f32 	[%r29+8], %f357;\n"
    "	ld.shared.f32 	%f358, [%r64+1280];\n"
    "	sub.f32 	%f359, %f2, %f358;\n"
    "	mul.f32 	%f360, %f359, %f1;\n"
    "	cvt.rni.f32.f32	%f361, %f360;\n"
    "	mul.f32 	%f362, %f361, %f5;\n"
    "	sub.f32 	%f363, %f359, %f362;\n"
    "	fma.rn.f32 	%f364, %f363, %f363, 0f00000000;\n"
    "	ld.shared.f32 	%f365, [%r64+1284];\n"
    "	sub.f32 	%f366, %f3, %f365;\n"
    "	mul.f32 	%f367, %f366, %f1;\n"
    "	cvt.rni.f32.f32	%f368, %f367;\n"
    "	mul.f32 	%f369, %f368, %f5;\n"
    "	sub.f32 	%f370, %f366, %f369;\n"
    "	fma.rn.f32 	%f371, %f370, %f370, %f364;\n"
    "	ld.shared.f32 	%f372, [%r64+1288];\n"
    "	sub.f32 	%f373, %f4, %f372;\n"
    "	mul.f32 	%f374, %f373, %f1;\n"
    "	cvt.rni.f32.f32	%f375, %f374;\n"
    "	mul.f32 	%f376, %f375, %f5;\n"
    "	sub.f32 	%f377, %f373, %f376;\n"
    "	fma.rn.f32 	%f378, %f377, %f377, %f371;\n"
    "	ld.shared.u32 	%r84, [%r64+1292];\n"
    "	add.s32 	%r85, %r84, %r2;\n"
    "	sqrt.rn.f32 	%f379, %f378;\n"
    "	rcp.rn.f32 	%f380, %f379;\n"
    "	mul.f32 	%f381, %f380, %f380;\n"
    "	mul.f32 	%f382, %f381, %f381;\n"
    "	mul.f32 	%f383, %f382, %f382;\n"
    "	mad.lo.s32 	%r86, %r85, 24, %r67;\n"
    "	ld.const.f32 	%f384, [%r86];\n"
    "	mul.f32 	%f385, %f384, 0f3C70319E;\n"
    "	ld.const.f32 	%f386, [%r86+4];\n"
    "	sub.f32 	%f387, %f386, %f379;\n"
    "	ld.const.f32 	%f388, [%r86+8];\n"
    "	mul.f32 	%f389, %f387, %f388;\n"
    "	mul.f32 	%f390, %f389, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f391, %f390;\n"
    "	fma.rn.f32 	%f392, %f391, %f75, %f389;\n"
    "	fma.rn.f32 	%f393, %f391, %f77, %f392;\n"
    "	mul.f32 	%f20, %f393, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f19,%f20;\n"
    "	// inline asm\n"
    "	add.f32 	%f394, %f391, 0f00000000;\n"
    "	ex2.approx.f32 	%f395, %f394;\n"
    "	mul.f32 	%f396, %f19, %f395;\n"
    "	setp.lt.f32	%p20, %f389, 0fC2D20000;\n"
    "	selp.f32	%f397, 0f00000000, %f396, %p20;\n"
    "	setp.gt.f32	%p21, %f389, 0f42D20000;\n"
    "	selp.f32	%f398, 0f7F800000, %f397, %p21;\n"
    "	mul.f32 	%f399, %f385, %f398;\n"
    "	mul.f32 	%f400, %f399, %f388;\n"
    "	mul.f32 	%f401, %f400, %f380;\n"
    "	ld.const.f32 	%f402, [%r86+12];\n"
    "	mul.f32 	%f403, %f402, 0f40C00000;\n"
    "	mul.f32 	%f404, %f403, %f383;\n"
    "	sub.f32 	%f405, %f401, %f404;\n"
    "	ld.const.f32 	%f406, [%r86+16];\n"
    "	mul.f32 	%f407, %f406, 0f41000000;\n"
    "	mul.f32 	%f408, %f407, %f383;\n"
    "	mul.f32 	%f409, %f408, %f381;\n"
    "	sub.f32 	%f410, %f405, %f409;\n"
    "	mul.f32 	%f411, %f381, %f380;\n"
    "	ld.const.f32 	%f412, [%r86+20];\n"
    "	fma.rn.f32 	%f413, %f411, %f412, %f410;\n"
    "	setp.eq.f32	%p22, %f378, 0f00000000;\n"
    "	selp.f32	%f414, 0f00000000, %f413, %p22;\n"
    "	ld.shared.f32 	%f415, [%r29];\n"
    "	fma.rn.f32 	%f416, %f414, %f363, %f415;\n"
    "	ld.shared.f32 	%f417, [%r29+4];\n"
    "	ld.shared.f32 	%f418, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f416;\n"
    "	fma.rn.f32 	%f419, %f414, %f370, %f417;\n"
    "	st.shared.f32 	[%r29+4], %f419;\n"
    "	fma.rn.f32 	%f420, %f414, %f377, %f418;\n"
    "	st.shared.f32 	[%r29+8], %f420;\n"
    "	ld.shared.f32 	%f421, [%r64+1536];\n"
    "	sub.f32 	%f422, %f2, %f421;\n"
    "	mul.f32 	%f423, %f422, %f1;\n"
    "	cvt.rni.f32.f32	%f424, %f423;\n"
    "	mul.f32 	%f425, %f424, %f5;\n"
    "	sub.f32 	%f426, %f422, %f425;\n"
    "	fma.rn.f32 	%f427, %f426, %f426, 0f00000000;\n"
    "	ld.shared.f32 	%f428, [%r64+1540];\n"
    "	sub.f32 	%f429, %f3, %f428;\n"
    "	mul.f32 	%f430, %f429, %f1;\n"
    "	cvt.rni.f32.f32	%f431, %f430;\n"
    "	mul.f32 	%f432, %f431, %f5;\n"
    "	sub.f32 	%f433, %f429, %f432;\n"
    "	fma.rn.f32 	%f434, %f433, %f433, %f427;\n"
    "	ld.shared.f32 	%f435, [%r64+1544];\n"
    "	sub.f32 	%f436, %f4, %f435;\n"
    "	mul.f32 	%f437, %f436, %f1;\n"
    "	cvt.rni.f32.f32	%f438, %f437;\n"
    "	mul.f32 	%f439, %f438, %f5;\n"
    "	sub.f32 	%f440, %f436, %f439;\n"
    "	fma.rn.f32 	%f441, %f440, %f440, %f434;\n"
    "	ld.shared.u32 	%r87, [%r64+1548];\n"
    "	add.s32 	%r88, %r87, %r2;\n"
    "	sqrt.rn.f32 	%f442, %f441;\n"
    "	rcp.rn.f32 	%f443, %f442;\n"
    "	mul.f32 	%f444, %f443, %f443;\n"
    "	mul.f32 	%f445, %f444, %f444;\n"
    "	mul.f32 	%f446, %f445, %f445;\n"
    "	mad.lo.s32 	%r89, %r88, 24, %r67;\n"
    "	ld.const.f32 	%f447, [%r89];\n"
    "	mul.f32 	%f448, %f447, 0f3C70319E;\n"
    "	ld.const.f32 	%f449, [%r89+4];\n"
    "	sub.f32 	%f450, %f449, %f442;\n"
    "	ld.const.f32 	%f451, [%r89+8];\n"
    "	mul.f32 	%f452, %f450, %f451;\n"
    "	mul.f32 	%f453, %f452, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f454, %f453;\n"
    "	fma.rn.f32 	%f455, %f454, %f75, %f452;\n"
    "	fma.rn.f32 	%f456, %f454, %f77, %f455;\n"
    "	mul.f32 	%f22, %f456, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f21,%f22;\n"
    "	// inline asm\n"
    "	add.f32 	%f457, %f454, 0f00000000;\n"
    "	ex2.approx.f32 	%f458, %f457;\n"
    "	mul.f32 	%f459, %f21, %f458;\n"
    "	setp.lt.f32	%p23, %f452, 0fC2D20000;\n"
    "	selp.f32	%f460, 0f00000000, %f459, %p23;\n"
    "	setp.gt.f32	%p24, %f452, 0f42D20000;\n"
    "	selp.f32	%f461, 0f7F800000, %f460, %p24;\n"
    "	mul.f32 	%f462, %f448, %f461;\n"
    "	mul.f32 	%f463, %f462, %f451;\n"
    "	mul.f32 	%f464, %f463, %f443;\n"
    "	ld.const.f32 	%f465, [%r89+12];\n"
    "	mul.f32 	%f466, %f465, 0f40C00000;\n"
    "	mul.f32 	%f467, %f466, %f446;\n"
    "	sub.f32 	%f468, %f464, %f467;\n"
    "	ld.const.f32 	%f469, [%r89+16];\n"
    "	mul.f32 	%f470, %f469, 0f41000000;\n"
    "	mul.f32 	%f471, %f470, %f446;\n"
    "	mul.f32 	%f472, %f471, %f444;\n"
    "	sub.f32 	%f473, %f468, %f472;\n"
    "	mul.f32 	%f474, %f444, %f443;\n"
    "	ld.const.f32 	%f475, [%r89+20];\n"
    "	fma.rn.f32 	%f476, %f474, %f475, %f473;\n"
    "	setp.eq.f32	%p25, %f441, 0f00000000;\n"
    "	selp.f32	%f477, 0f00000000, %f476, %p25;\n"
    "	ld.shared.f32 	%f478, [%r29];\n"
    "	fma.rn.f32 	%f479, %f477, %f426, %f478;\n"
    "	ld.shared.f32 	%f480, [%r29+4];\n"
    "	ld.shared.f32 	%f481, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f479;\n"
    "	fma.rn.f32 	%f482, %f477, %f433, %f480;\n"
    "	st.shared.f32 	[%r29+4], %f482;\n"
    "	fma.rn.f32 	%f483, %f477, %f440, %f481;\n"
    "	st.shared.f32 	[%r29+8], %f483;\n"
    "	ld.shared.f32 	%f484, [%r64+1792];\n"
    "	sub.f32 	%f485, %f2, %f484;\n"
    "	mul.f32 	%f486, %f485, %f1;\n"
    "	cvt.rni.f32.f32	%f487, %f486;\n"
    "	mul.f32 	%f488, %f487, %f5;\n"
    "	sub.f32 	%f489, %f485, %f488;\n"
    "	fma.rn.f32 	%f490, %f489, %f489, 0f00000000;\n"
    "	ld.shared.f32 	%f491, [%r64+1796];\n"
    "	sub.f32 	%f492, %f3, %f491;\n"
    "	mul.f32 	%f493, %f492, %f1;\n"
    "	cvt.rni.f32.f32	%f494, %f493;\n"
    "	mul.f32 	%f495, %f494, %f5;\n"
    "	sub.f32 	%f496, %f492, %f495;\n"
    "	fma.rn.f32 	%f497, %f496, %f496, %f490;\n"
    "	ld.shared.f32 	%f498, [%r64+1800];\n"
    "	sub.f32 	%f499, %f4, %f498;\n"
    "	mul.f32 	%f500, %f499, %f1;\n"
    "	cvt.rni.f32.f32	%f501, %f500;\n"
    "	mul.f32 	%f502, %f501, %f5;\n"
    "	sub.f32 	%f503, %f499, %f502;\n"
    "	fma.rn.f32 	%f504, %f503, %f503, %f497;\n"
    "	ld.shared.u32 	%r90, [%r64+1804];\n"
    "	add.s32 	%r91, %r90, %r2;\n"
    "	sqrt.rn.f32 	%f505, %f504;\n"
    "	rcp.rn.f32 	%f506, %f505;\n"
    "	mul.f32 	%f507, %f506, %f506;\n"
    "	mul.f32 	%f508, %f507, %f507;\n"
    "	mul.f32 	%f509, %f508, %f508;\n"
    "	mad.lo.s32 	%r92, %r91, 24, %r67;\n"
    "	ld.const.f32 	%f510, [%r92];\n"
    "	mul.f32 	%f511, %f510, 0f3C70319E;\n"
    "	ld.const.f32 	%f512, [%r92+4];\n"
    "	sub.f32 	%f513, %f512, %f505;\n"
    "	ld.const.f32 	%f514, [%r92+8];\n"
    "	mul.f32 	%f515, %f513, %f514;\n"
    "	mul.f32 	%f516, %f515, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f517, %f516;\n"
    "	fma.rn.f32 	%f518, %f517, %f75, %f515;\n"
    "	fma.rn.f32 	%f519, %f517, %f77, %f518;\n"
    "	mul.f32 	%f24, %f519, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f23,%f24;\n"
    "	// inline asm\n"
    "	add.f32 	%f520, %f517, 0f00000000;\n"
    "	ex2.approx.f32 	%f521, %f520;\n"
    "	mul.f32 	%f522, %f23, %f521;\n"
    "	setp.lt.f32	%p26, %f515, 0fC2D20000;\n"
    "	selp.f32	%f523, 0f00000000, %f522, %p26;\n"
    "	setp.gt.f32	%p27, %f515, 0f42D20000;\n"
    "	selp.f32	%f524, 0f7F800000, %f523, %p27;\n"
    "	mul.f32 	%f525, %f511, %f524;\n"
    "	mul.f32 	%f526, %f525, %f514;\n"
    "	mul.f32 	%f527, %f526, %f506;\n"
    "	ld.const.f32 	%f528, [%r92+12];\n"
    "	mul.f32 	%f529, %f528, 0f40C00000;\n"
    "	mul.f32 	%f530, %f529, %f509;\n"
    "	sub.f32 	%f531, %f527, %f530;\n"
    "	ld.const.f32 	%f532, [%r92+16];\n"
    "	mul.f32 	%f533, %f532, 0f41000000;\n"
    "	mul.f32 	%f534, %f533, %f509;\n"
    "	mul.f32 	%f535, %f534, %f507;\n"
    "	sub.f32 	%f536, %f531, %f535;\n"
    "	mul.f32 	%f537, %f507, %f506;\n"
    "	ld.const.f32 	%f538, [%r92+20];\n"
    "	fma.rn.f32 	%f539, %f537, %f538, %f536;\n"
    "	setp.eq.f32	%p28, %f504, 0f00000000;\n"
    "	selp.f32	%f540, 0f00000000, %f539, %p28;\n"
    "	ld.shared.f32 	%f541, [%r29];\n"
    "	fma.rn.f32 	%f542, %f540, %f489, %f541;\n"
    "	ld.shared.f32 	%f543, [%r29+4];\n"
    "	ld.shared.f32 	%f544, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f542;\n"
    "	fma.rn.f32 	%f545, %f540, %f496, %f543;\n"
    "	st.shared.f32 	[%r29+4], %f545;\n"
    "	fma.rn.f32 	%f546, %f540, %f503, %f544;\n"
    "	st.shared.f32 	[%r29+8], %f546;\n"
    "	ld.shared.f32 	%f547, [%r64+2048];\n"
    "	sub.f32 	%f548, %f2, %f547;\n"
    "	mul.f32 	%f549, %f548, %f1;\n"
    "	cvt.rni.f32.f32	%f550, %f549;\n"
    "	mul.f32 	%f551, %f550, %f5;\n"
    "	sub.f32 	%f552, %f548, %f551;\n"
    "	fma.rn.f32 	%f553, %f552, %f552, 0f00000000;\n"
    "	ld.shared.f32 	%f554, [%r64+2052];\n"
    "	sub.f32 	%f555, %f3, %f554;\n"
    "	mul.f32 	%f556, %f555, %f1;\n"
    "	cvt.rni.f32.f32	%f557, %f556;\n"
    "	mul.f32 	%f558, %f557, %f5;\n"
    "	sub.f32 	%f559, %f555, %f558;\n"
    "	fma.rn.f32 	%f560, %f559, %f559, %f553;\n"
    "	ld.shared.f32 	%f561, [%r64+2056];\n"
    "	sub.f32 	%f562, %f4, %f561;\n"
    "	mul.f32 	%f563, %f562, %f1;\n"
    "	cvt.rni.f32.f32	%f564, %f563;\n"
    "	mul.f32 	%f565, %f564, %f5;\n"
    "	sub.f32 	%f566, %f562, %f565;\n"
    "	fma.rn.f32 	%f567, %f566, %f566, %f560;\n"
    "	ld.shared.u32 	%r93, [%r64+2060];\n"
    "	add.s32 	%r94, %r93, %r2;\n"
    "	sqrt.rn.f32 	%f568, %f567;\n"
    "	rcp.rn.f32 	%f569, %f568;\n"
    "	mul.f32 	%f570, %f569, %f569;\n"
    "	mul.f32 	%f571, %f570, %f570;\n"
    "	mul.f32 	%f572, %f571, %f571;\n"
    "	mad.lo.s32 	%r95, %r94, 24, %r67;\n"
    "	ld.const.f32 	%f573, [%r95];\n"
    "	mul.f32 	%f574, %f573, 0f3C70319E;\n"
    "	ld.const.f32 	%f575, [%r95+4];\n"
    "	sub.f32 	%f576, %f575, %f568;\n"
    "	ld.const.f32 	%f577, [%r95+8];\n"
    "	mul.f32 	%f578, %f576, %f577;\n"
    "	mul.f32 	%f579, %f578, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f580, %f579;\n"
    "	fma.rn.f32 	%f581, %f580, %f75, %f578;\n"
    "	fma.rn.f32 	%f582, %f580, %f77, %f581;\n"
    "	mul.f32 	%f26, %f582, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f25,%f26;\n"
    "	// inline asm\n"
    "	add.f32 	%f583, %f580, 0f00000000;\n"
    "	ex2.approx.f32 	%f584, %f583;\n"
    "	mul.f32 	%f585, %f25, %f584;\n"
    "	setp.lt.f32	%p29, %f578, 0fC2D20000;\n"
    "	selp.f32	%f586, 0f00000000, %f585, %p29;\n"
    "	setp.gt.f32	%p30, %f578, 0f42D20000;\n"
    "	selp.f32	%f587, 0f7F800000, %f586, %p30;\n"
    "	mul.f32 	%f588, %f574, %f587;\n"
    "	mul.f32 	%f589, %f588, %f577;\n"
    "	mul.f32 	%f590, %f589, %f569;\n"
    "	ld.const.f32 	%f591, [%r95+12];\n"
    "	mul.f32 	%f592, %f591, 0f40C00000;\n"
    "	mul.f32 	%f593, %f592, %f572;\n"
    "	sub.f32 	%f594, %f590, %f593;\n"
    "	ld.const.f32 	%f595, [%r95+16];\n"
    "	mul.f32 	%f596, %f595, 0f41000000;\n"
    "	mul.f32 	%f597, %f596, %f572;\n"
    "	mul.f32 	%f598, %f597, %f570;\n"
    "	sub.f32 	%f599, %f594, %f598;\n"
    "	mul.f32 	%f600, %f570, %f569;\n"
    "	ld.const.f32 	%f601, [%r95+20];\n"
    "	fma.rn.f32 	%f602, %f600, %f601, %f599;\n"
    "	setp.eq.f32	%p31, %f567, 0f00000000;\n"
    "	selp.f32	%f603, 0f00000000, %f602, %p31;\n"
    "	ld.shared.f32 	%f604, [%r29];\n"
    "	fma.rn.f32 	%f605, %f603, %f552, %f604;\n"
    "	ld.shared.f32 	%f606, [%r29+4];\n"
    "	ld.shared.f32 	%f607, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f605;\n"
    "	fma.rn.f32 	%f608, %f603, %f559, %f606;\n"
    "	st.shared.f32 	[%r29+4], %f608;\n"
    "	fma.rn.f32 	%f609, %f603, %f566, %f607;\n"
    "	st.shared.f32 	[%r29+8], %f609;\n"
    "	ld.shared.f32 	%f610, [%r64+2304];\n"
    "	sub.f32 	%f611, %f2, %f610;\n"
    "	mul.f32 	%f612, %f611, %f1;\n"
    "	cvt.rni.f32.f32	%f613, %f612;\n"
    "	mul.f32 	%f614, %f613, %f5;\n"
    "	sub.f32 	%f615, %f611, %f614;\n"
    "	fma.rn.f32 	%f616, %f615, %f615, 0f00000000;\n"
    "	ld.shared.f32 	%f617, [%r64+2308];\n"
    "	sub.f32 	%f618, %f3, %f617;\n"
    "	mul.f32 	%f619, %f618, %f1;\n"
    "	cvt.rni.f32.f32	%f620, %f619;\n"
    "	mul.f32 	%f621, %f620, %f5;\n"
    "	sub.f32 	%f622, %f618, %f621;\n"
    "	fma.rn.f32 	%f623, %f622, %f622, %f616;\n"
    "	ld.shared.f32 	%f624, [%r64+2312];\n"
    "	sub.f32 	%f625, %f4, %f624;\n"
    "	mul.f32 	%f626, %f625, %f1;\n"
    "	cvt.rni.f32.f32	%f627, %f626;\n"
    "	mul.f32 	%f628, %f627, %f5;\n"
    "	sub.f32 	%f629, %f625, %f628;\n"
    "	fma.rn.f32 	%f630, %f629, %f629, %f623;\n"
    "	ld.shared.u32 	%r96, [%r64+2316];\n"
    "	add.s32 	%r97, %r96, %r2;\n"
    "	sqrt.rn.f32 	%f631, %f630;\n"
    "	rcp.rn.f32 	%f632, %f631;\n"
    "	mul.f32 	%f633, %f632, %f632;\n"
    "	mul.f32 	%f634, %f633, %f633;\n"
    "	mul.f32 	%f635, %f634, %f634;\n"
    "	mad.lo.s32 	%r98, %r97, 24, %r67;\n"
    "	ld.const.f32 	%f636, [%r98];\n"
    "	mul.f32 	%f637, %f636, 0f3C70319E;\n"
    "	ld.const.f32 	%f638, [%r98+4];\n"
    "	sub.f32 	%f639, %f638, %f631;\n"
    "	ld.const.f32 	%f640, [%r98+8];\n"
    "	mul.f32 	%f641, %f639, %f640;\n"
    "	mul.f32 	%f642, %f641, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f643, %f642;\n"
    "	fma.rn.f32 	%f644, %f643, %f75, %f641;\n"
    "	fma.rn.f32 	%f645, %f643, %f77, %f644;\n"
    "	mul.f32 	%f28, %f645, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f27,%f28;\n"
    "	// inline asm\n"
    "	add.f32 	%f646, %f643, 0f00000000;\n"
    "	ex2.approx.f32 	%f647, %f646;\n"
    "	mul.f32 	%f648, %f27, %f647;\n"
    "	setp.lt.f32	%p32, %f641, 0fC2D20000;\n"
    "	selp.f32	%f649, 0f00000000, %f648, %p32;\n"
    "	setp.gt.f32	%p33, %f641, 0f42D20000;\n"
    "	selp.f32	%f650, 0f7F800000, %f649, %p33;\n"
    "	mul.f32 	%f651, %f637, %f650;\n"
    "	mul.f32 	%f652, %f651, %f640;\n"
    "	mul.f32 	%f653, %f652, %f632;\n"
    "	ld.const.f32 	%f654, [%r98+12];\n"
    "	mul.f32 	%f655, %f654, 0f40C00000;\n"
    "	mul.f32 	%f656, %f655, %f635;\n"
    "	sub.f32 	%f657, %f653, %f656;\n"
    "	ld.const.f32 	%f658, [%r98+16];\n"
    "	mul.f32 	%f659, %f658, 0f41000000;\n"
    "	mul.f32 	%f660, %f659, %f635;\n"
    "	mul.f32 	%f661, %f660, %f633;\n"
    "	sub.f32 	%f662, %f657, %f661;\n"
    "	mul.f32 	%f663, %f633, %f632;\n"
    "	ld.const.f32 	%f664, [%r98+20];\n"
    "	fma.rn.f32 	%f665, %f663, %f664, %f662;\n"
    "	setp.eq.f32	%p34, %f630, 0f00000000;\n"
    "	selp.f32	%f666, 0f00000000, %f665, %p34;\n"
    "	ld.shared.f32 	%f667, [%r29];\n"
    "	fma.rn.f32 	%f668, %f666, %f615, %f667;\n"
    "	ld.shared.f32 	%f669, [%r29+4];\n"
    "	ld.shared.f32 	%f670, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f668;\n"
    "	fma.rn.f32 	%f671, %f666, %f622, %f669;\n"
    "	st.shared.f32 	[%r29+4], %f671;\n"
    "	fma.rn.f32 	%f672, %f666, %f629, %f670;\n"
    "	st.shared.f32 	[%r29+8], %f672;\n"
    "	ld.shared.f32 	%f673, [%r64+2560];\n"
    "	sub.f32 	%f674, %f2, %f673;\n"
    "	mul.f32 	%f675, %f674, %f1;\n"
    "	cvt.rni.f32.f32	%f676, %f675;\n"
    "	mul.f32 	%f677, %f676, %f5;\n"
    "	sub.f32 	%f678, %f674, %f677;\n"
    "	fma.rn.f32 	%f679, %f678, %f678, 0f00000000;\n"
    "	ld.shared.f32 	%f680, [%r64+2564];\n"
    "	sub.f32 	%f681, %f3, %f680;\n"
    "	mul.f32 	%f682, %f681, %f1;\n"
    "	cvt.rni.f32.f32	%f683, %f682;\n"
    "	mul.f32 	%f684, %f683, %f5;\n"
    "	sub.f32 	%f685, %f681, %f684;\n"
    "	fma.rn.f32 	%f686, %f685, %f685, %f679;\n"
    "	ld.shared.f32 	%f687, [%r64+2568];\n"
    "	sub.f32 	%f688, %f4, %f687;\n"
    "	mul.f32 	%f689, %f688, %f1;\n"
    "	cvt.rni.f32.f32	%f690, %f689;\n"
    "	mul.f32 	%f691, %f690, %f5;\n"
    "	sub.f32 	%f692, %f688, %f691;\n"
    "	fma.rn.f32 	%f693, %f692, %f692, %f686;\n"
    "	ld.shared.u32 	%r99, [%r64+2572];\n"
    "	add.s32 	%r100, %r99, %r2;\n"
    "	sqrt.rn.f32 	%f694, %f693;\n"
    "	rcp.rn.f32 	%f695, %f694;\n"
    "	mul.f32 	%f696, %f695, %f695;\n"
    "	mul.f32 	%f697, %f696, %f696;\n"
    "	mul.f32 	%f698, %f697, %f697;\n"
    "	mad.lo.s32 	%r101, %r100, 24, %r67;\n"
    "	ld.const.f32 	%f699, [%r101];\n"
    "	mul.f32 	%f700, %f699, 0f3C70319E;\n"
    "	ld.const.f32 	%f701, [%r101+4];\n"
    "	sub.f32 	%f702, %f701, %f694;\n"
    "	ld.const.f32 	%f703, [%r101+8];\n"
    "	mul.f32 	%f704, %f702, %f703;\n"
    "	mul.f32 	%f705, %f704, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f706, %f705;\n"
    "	fma.rn.f32 	%f707, %f706, %f75, %f704;\n"
    "	fma.rn.f32 	%f708, %f706, %f77, %f707;\n"
    "	mul.f32 	%f30, %f708, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f29,%f30;\n"
    "	// inline asm\n"
    "	add.f32 	%f709, %f706, 0f00000000;\n"
    "	ex2.approx.f32 	%f710, %f709;\n"
    "	mul.f32 	%f711, %f29, %f710;\n"
    "	setp.lt.f32	%p35, %f704, 0fC2D20000;\n"
    "	selp.f32	%f712, 0f00000000, %f711, %p35;\n"
    "	setp.gt.f32	%p36, %f704, 0f42D20000;\n"
    "	selp.f32	%f713, 0f7F800000, %f712, %p36;\n"
    "	mul.f32 	%f714, %f700, %f713;\n"
    "	mul.f32 	%f715, %f714, %f703;\n"
    "	mul.f32 	%f716, %f715, %f695;\n"
    "	ld.const.f32 	%f717, [%r101+12];\n"
    "	mul.f32 	%f718, %f717, 0f40C00000;\n"
    "	mul.f32 	%f719, %f718, %f698;\n"
    "	sub.f32 	%f720, %f716, %f719;\n"
    "	ld.const.f32 	%f721, [%r101+16];\n"
    "	mul.f32 	%f722, %f721, 0f41000000;\n"
    "	mul.f32 	%f723, %f722, %f698;\n"
    "	mul.f32 	%f724, %f723, %f696;\n"
    "	sub.f32 	%f725, %f720, %f724;\n"
    "	mul.f32 	%f726, %f696, %f695;\n"
    "	ld.const.f32 	%f727, [%r101+20];\n"
    "	fma.rn.f32 	%f728, %f726, %f727, %f725;\n"
    "	setp.eq.f32	%p37, %f693, 0f00000000;\n"
    "	selp.f32	%f729, 0f00000000, %f728, %p37;\n"
    "	ld.shared.f32 	%f730, [%r29];\n"
    "	fma.rn.f32 	%f731, %f729, %f678, %f730;\n"
    "	ld.shared.f32 	%f732, [%r29+4];\n"
    "	ld.shared.f32 	%f733, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f731;\n"
    "	fma.rn.f32 	%f734, %f729, %f685, %f732;\n"
    "	st.shared.f32 	[%r29+4], %f734;\n"
    "	fma.rn.f32 	%f735, %f729, %f692, %f733;\n"
    "	st.shared.f32 	[%r29+8], %f735;\n"
    "	ld.shared.f32 	%f736, [%r64+2816];\n"
    "	sub.f32 	%f737, %f2, %f736;\n"
    "	mul.f32 	%f738, %f737, %f1;\n"
    "	cvt.rni.f32.f32	%f739, %f738;\n"
    "	mul.f32 	%f740, %f739, %f5;\n"
    "	sub.f32 	%f741, %f737, %f740;\n"
    "	fma.rn.f32 	%f742, %f741, %f741, 0f00000000;\n"
    "	ld.shared.f32 	%f743, [%r64+2820];\n"
    "	sub.f32 	%f744, %f3, %f743;\n"
    "	mul.f32 	%f745, %f744, %f1;\n"
    "	cvt.rni.f32.f32	%f746, %f745;\n"
    "	mul.f32 	%f747, %f746, %f5;\n"
    "	sub.f32 	%f748, %f744, %f747;\n"
    "	fma.rn.f32 	%f749, %f748, %f748, %f742;\n"
    "	ld.shared.f32 	%f750, [%r64+2824];\n"
    "	sub.f32 	%f751, %f4, %f750;\n"
    "	mul.f32 	%f752, %f751, %f1;\n"
    "	cvt.rni.f32.f32	%f753, %f752;\n"
    "	mul.f32 	%f754, %f753, %f5;\n"
    "	sub.f32 	%f755, %f751, %f754;\n"
    "	fma.rn.f32 	%f756, %f755, %f755, %f749;\n"
    "	ld.shared.u32 	%r102, [%r64+2828];\n"
    "	add.s32 	%r103, %r102, %r2;\n"
    "	sqrt.rn.f32 	%f757, %f756;\n"
    "	rcp.rn.f32 	%f758, %f757;\n"
    "	mul.f32 	%f759, %f758, %f758;\n"
    "	mul.f32 	%f760, %f759, %f759;\n"
    "	mul.f32 	%f761, %f760, %f760;\n"
    "	mad.lo.s32 	%r104, %r103, 24, %r67;\n"
    "	ld.const.f32 	%f762, [%r104];\n"
    "	mul.f32 	%f763, %f762, 0f3C70319E;\n"
    "	ld.const.f32 	%f764, [%r104+4];\n"
    "	sub.f32 	%f765, %f764, %f757;\n"
    "	ld.const.f32 	%f766, [%r104+8];\n"
    "	mul.f32 	%f767, %f765, %f766;\n"
    "	mul.f32 	%f768, %f767, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f769, %f768;\n"
    "	fma.rn.f32 	%f770, %f769, %f75, %f767;\n"
    "	fma.rn.f32 	%f771, %f769, %f77, %f770;\n"
    "	mul.f32 	%f32, %f771, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f31,%f32;\n"
    "	// inline asm\n"
    "	add.f32 	%f772, %f769, 0f00000000;\n"
    "	ex2.approx.f32 	%f773, %f772;\n"
    "	mul.f32 	%f774, %f31, %f773;\n"
    "	setp.lt.f32	%p38, %f767, 0fC2D20000;\n"
    "	selp.f32	%f775, 0f00000000, %f774, %p38;\n"
    "	setp.gt.f32	%p39, %f767, 0f42D20000;\n"
    "	selp.f32	%f776, 0f7F800000, %f775, %p39;\n"
    "	mul.f32 	%f777, %f763, %f776;\n"
    "	mul.f32 	%f778, %f777, %f766;\n"
    "	mul.f32 	%f779, %f778, %f758;\n"
    "	ld.const.f32 	%f780, [%r104+12];\n"
    "	mul.f32 	%f781, %f780, 0f40C00000;\n"
    "	mul.f32 	%f782, %f781, %f761;\n"
    "	sub.f32 	%f783, %f779, %f782;\n"
    "	ld.const.f32 	%f784, [%r104+16];\n"
    "	mul.f32 	%f785, %f784, 0f41000000;\n"
    "	mul.f32 	%f786, %f785, %f761;\n"
    "	mul.f32 	%f787, %f786, %f759;\n"
    "	sub.f32 	%f788, %f783, %f787;\n"
    "	mul.f32 	%f789, %f759, %f758;\n"
    "	ld.const.f32 	%f790, [%r104+20];\n"
    "	fma.rn.f32 	%f791, %f789, %f790, %f788;\n"
    "	setp.eq.f32	%p40, %f756, 0f00000000;\n"
    "	selp.f32	%f792, 0f00000000, %f791, %p40;\n"
    "	ld.shared.f32 	%f793, [%r29];\n"
    "	fma.rn.f32 	%f794, %f792, %f741, %f793;\n"
    "	ld.shared.f32 	%f795, [%r29+4];\n"
    "	ld.shared.f32 	%f796, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f794;\n"
    "	fma.rn.f32 	%f797, %f792, %f748, %f795;\n"
    "	st.shared.f32 	[%r29+4], %f797;\n"
    "	fma.rn.f32 	%f798, %f792, %f755, %f796;\n"
    "	st.shared.f32 	[%r29+8], %f798;\n"
    "	ld.shared.f32 	%f799, [%r64+3072];\n"
    "	sub.f32 	%f800, %f2, %f799;\n"
    "	mul.f32 	%f801, %f800, %f1;\n"
    "	cvt.rni.f32.f32	%f802, %f801;\n"
    "	mul.f32 	%f803, %f802, %f5;\n"
    "	sub.f32 	%f804, %f800, %f803;\n"
    "	fma.rn.f32 	%f805, %f804, %f804, 0f00000000;\n"
    "	ld.shared.f32 	%f806, [%r64+3076];\n"
    "	sub.f32 	%f807, %f3, %f806;\n"
    "	mul.f32 	%f808, %f807, %f1;\n"
    "	cvt.rni.f32.f32	%f809, %f808;\n"
    "	mul.f32 	%f810, %f809, %f5;\n"
    "	sub.f32 	%f811, %f807, %f810;\n"
    "	fma.rn.f32 	%f812, %f811, %f811, %f805;\n"
    "	ld.shared.f32 	%f813, [%r64+3080];\n"
    "	sub.f32 	%f814, %f4, %f813;\n"
    "	mul.f32 	%f815, %f814, %f1;\n"
    "	cvt.rni.f32.f32	%f816, %f815;\n"
    "	mul.f32 	%f817, %f816, %f5;\n"
    "	sub.f32 	%f818, %f814, %f817;\n"
    "	fma.rn.f32 	%f819, %f818, %f818, %f812;\n"
    "	ld.shared.u32 	%r105, [%r64+3084];\n"
    "	add.s32 	%r106, %r105, %r2;\n"
    "	sqrt.rn.f32 	%f820, %f819;\n"
    "	rcp.rn.f32 	%f821, %f820;\n"
    "	mul.f32 	%f822, %f821, %f821;\n"
    "	mul.f32 	%f823, %f822, %f822;\n"
    "	mul.f32 	%f824, %f823, %f823;\n"
    "	mad.lo.s32 	%r107, %r106, 24, %r67;\n"
    "	ld.const.f32 	%f825, [%r107];\n"
    "	mul.f32 	%f826, %f825, 0f3C70319E;\n"
    "	ld.const.f32 	%f827, [%r107+4];\n"
    "	sub.f32 	%f828, %f827, %f820;\n"
    "	ld.const.f32 	%f829, [%r107+8];\n"
    "	mul.f32 	%f830, %f828, %f829;\n"
    "	mul.f32 	%f831, %f830, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f832, %f831;\n"
    "	fma.rn.f32 	%f833, %f832, %f75, %f830;\n"
    "	fma.rn.f32 	%f834, %f832, %f77, %f833;\n"
    "	mul.f32 	%f34, %f834, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f33,%f34;\n"
    "	// inline asm\n"
    "	add.f32 	%f835, %f832, 0f00000000;\n"
    "	ex2.approx.f32 	%f836, %f835;\n"
    "	mul.f32 	%f837, %f33, %f836;\n"
    "	setp.lt.f32	%p41, %f830, 0fC2D20000;\n"
    "	selp.f32	%f838, 0f00000000, %f837, %p41;\n"
    "	setp.gt.f32	%p42, %f830, 0f42D20000;\n"
    "	selp.f32	%f839, 0f7F800000, %f838, %p42;\n"
    "	mul.f32 	%f840, %f826, %f839;\n"
    "	mul.f32 	%f841, %f840, %f829;\n"
    "	mul.f32 	%f842, %f841, %f821;\n"
    "	ld.const.f32 	%f843, [%r107+12];\n"
    "	mul.f32 	%f844, %f843, 0f40C00000;\n"
    "	mul.f32 	%f845, %f844, %f824;\n"
    "	sub.f32 	%f846, %f842, %f845;\n"
    "	ld.const.f32 	%f847, [%r107+16];\n"
    "	mul.f32 	%f848, %f847, 0f41000000;\n"
    "	mul.f32 	%f849, %f848, %f824;\n"
    "	mul.f32 	%f850, %f849, %f822;\n"
    "	sub.f32 	%f851, %f846, %f850;\n"
    "	mul.f32 	%f852, %f822, %f821;\n"
    "	ld.const.f32 	%f853, [%r107+20];\n"
    "	fma.rn.f32 	%f854, %f852, %f853, %f851;\n"
    "	setp.eq.f32	%p43, %f819, 0f00000000;\n"
    "	selp.f32	%f855, 0f00000000, %f854, %p43;\n"
    "	ld.shared.f32 	%f856, [%r29];\n"
    "	fma.rn.f32 	%f857, %f855, %f804, %f856;\n"
    "	ld.shared.f32 	%f858, [%r29+4];\n"
    "	ld.shared.f32 	%f859, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f857;\n"
    "	fma.rn.f32 	%f860, %f855, %f811, %f858;\n"
    "	st.shared.f32 	[%r29+4], %f860;\n"
    "	fma.rn.f32 	%f861, %f855, %f818, %f859;\n"
    "	st.shared.f32 	[%r29+8], %f861;\n"
    "	ld.shared.f32 	%f862, [%r64+3328];\n"
    "	sub.f32 	%f863, %f2, %f862;\n"
    "	mul.f32 	%f864, %f863, %f1;\n"
    "	cvt.rni.f32.f32	%f865, %f864;\n"
    "	mul.f32 	%f866, %f865, %f5;\n"
    "	sub.f32 	%f867, %f863, %f866;\n"
    "	fma.rn.f32 	%f868, %f867, %f867, 0f00000000;\n"
    "	ld.shared.f32 	%f869, [%r64+3332];\n"
    "	sub.f32 	%f870, %f3, %f869;\n"
    "	mul.f32 	%f871, %f870, %f1;\n"
    "	cvt.rni.f32.f32	%f872, %f871;\n"
    "	mul.f32 	%f873, %f872, %f5;\n"
    "	sub.f32 	%f874, %f870, %f873;\n"
    "	fma.rn.f32 	%f875, %f874, %f874, %f868;\n"
    "	ld.shared.f32 	%f876, [%r64+3336];\n"
    "	sub.f32 	%f877, %f4, %f876;\n"
    "	mul.f32 	%f878, %f877, %f1;\n"
    "	cvt.rni.f32.f32	%f879, %f878;\n"
    "	mul.f32 	%f880, %f879, %f5;\n"
    "	sub.f32 	%f881, %f877, %f880;\n"
    "	fma.rn.f32 	%f882, %f881, %f881, %f875;\n"
    "	ld.shared.u32 	%r108, [%r64+3340];\n"
    "	add.s32 	%r109, %r108, %r2;\n"
    "	sqrt.rn.f32 	%f883, %f882;\n"
    "	rcp.rn.f32 	%f884, %f883;\n"
    "	mul.f32 	%f885, %f884, %f884;\n"
    "	mul.f32 	%f886, %f885, %f885;\n"
    "	mul.f32 	%f887, %f886, %f886;\n"
    "	mad.lo.s32 	%r110, %r109, 24, %r67;\n"
    "	ld.const.f32 	%f888, [%r110];\n"
    "	mul.f32 	%f889, %f888, 0f3C70319E;\n"
    "	ld.const.f32 	%f890, [%r110+4];\n"
    "	sub.f32 	%f891, %f890, %f883;\n"
    "	ld.const.f32 	%f892, [%r110+8];\n"
    "	mul.f32 	%f893, %f891, %f892;\n"
    "	mul.f32 	%f894, %f893, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f895, %f894;\n"
    "	fma.rn.f32 	%f896, %f895, %f75, %f893;\n"
    "	fma.rn.f32 	%f897, %f895, %f77, %f896;\n"
    "	mul.f32 	%f36, %f897, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f35,%f36;\n"
    "	// inline asm\n"
    "	add.f32 	%f898, %f895, 0f00000000;\n"
    "	ex2.approx.f32 	%f899, %f898;\n"
    "	mul.f32 	%f900, %f35, %f899;\n"
    "	setp.lt.f32	%p44, %f893, 0fC2D20000;\n"
    "	selp.f32	%f901, 0f00000000, %f900, %p44;\n"
    "	setp.gt.f32	%p45, %f893, 0f42D20000;\n"
    "	selp.f32	%f902, 0f7F800000, %f901, %p45;\n"
    "	mul.f32 	%f903, %f889, %f902;\n"
    "	mul.f32 	%f904, %f903, %f892;\n"
    "	mul.f32 	%f905, %f904, %f884;\n"
    "	ld.const.f32 	%f906, [%r110+12];\n"
    "	mul.f32 	%f907, %f906, 0f40C00000;\n"
    "	mul.f32 	%f908, %f907, %f887;\n"
    "	sub.f32 	%f909, %f905, %f908;\n"
    "	ld.const.f32 	%f910, [%r110+16];\n"
    "	mul.f32 	%f911, %f910, 0f41000000;\n"
    "	mul.f32 	%f912, %f911, %f887;\n"
    "	mul.f32 	%f913, %f912, %f885;\n"
    "	sub.f32 	%f914, %f909, %f913;\n"
    "	mul.f32 	%f915, %f885, %f884;\n"
    "	ld.const.f32 	%f916, [%r110+20];\n"
    "	fma.rn.f32 	%f917, %f915, %f916, %f914;\n"
    "	setp.eq.f32	%p46, %f882, 0f00000000;\n"
    "	selp.f32	%f918, 0f00000000, %f917, %p46;\n"
    "	ld.shared.f32 	%f919, [%r29];\n"
    "	fma.rn.f32 	%f920, %f918, %f867, %f919;\n"
    "	ld.shared.f32 	%f921, [%r29+4];\n"
    "	ld.shared.f32 	%f922, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f920;\n"
    "	fma.rn.f32 	%f923, %f918, %f874, %f921;\n"
    "	st.shared.f32 	[%r29+4], %f923;\n"
    "	fma.rn.f32 	%f924, %f918, %f881, %f922;\n"
    "	st.shared.f32 	[%r29+8], %f924;\n"
    "	ld.shared.f32 	%f925, [%r64+3584];\n"
    "	sub.f32 	%f926, %f2, %f925;\n"
    "	mul.f32 	%f927, %f926, %f1;\n"
    "	cvt.rni.f32.f32	%f928, %f927;\n"
    "	mul.f32 	%f929, %f928, %f5;\n"
    "	sub.f32 	%f930, %f926, %f929;\n"
    "	fma.rn.f32 	%f931, %f930, %f930, 0f00000000;\n"
    "	ld.shared.f32 	%f932, [%r64+3588];\n"
    "	sub.f32 	%f933, %f3, %f932;\n"
    "	mul.f32 	%f934, %f933, %f1;\n"
    "	cvt.rni.f32.f32	%f935, %f934;\n"
    "	mul.f32 	%f936, %f935, %f5;\n"
    "	sub.f32 	%f937, %f933, %f936;\n"
    "	fma.rn.f32 	%f938, %f937, %f937, %f931;\n"
    "	ld.shared.f32 	%f939, [%r64+3592];\n"
    "	sub.f32 	%f940, %f4, %f939;\n"
    "	mul.f32 	%f941, %f940, %f1;\n"
    "	cvt.rni.f32.f32	%f942, %f941;\n"
    "	mul.f32 	%f943, %f942, %f5;\n"
    "	sub.f32 	%f944, %f940, %f943;\n"
    "	fma.rn.f32 	%f945, %f944, %f944, %f938;\n"
    "	ld.shared.u32 	%r111, [%r64+3596];\n"
    "	add.s32 	%r112, %r111, %r2;\n"
    "	sqrt.rn.f32 	%f946, %f945;\n"
    "	rcp.rn.f32 	%f947, %f946;\n"
    "	mul.f32 	%f948, %f947, %f947;\n"
    "	mul.f32 	%f949, %f948, %f948;\n"
    "	mul.f32 	%f950, %f949, %f949;\n"
    "	mad.lo.s32 	%r113, %r112, 24, %r67;\n"
    "	ld.const.f32 	%f951, [%r113];\n"
    "	mul.f32 	%f952, %f951, 0f3C70319E;\n"
    "	ld.const.f32 	%f953, [%r113+4];\n"
    "	sub.f32 	%f954, %f953, %f946;\n"
    "	ld.const.f32 	%f955, [%r113+8];\n"
    "	mul.f32 	%f956, %f954, %f955;\n"
    "	mul.f32 	%f957, %f956, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f958, %f957;\n"
    "	fma.rn.f32 	%f959, %f958, %f75, %f956;\n"
    "	fma.rn.f32 	%f960, %f958, %f77, %f959;\n"
    "	mul.f32 	%f38, %f960, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f37,%f38;\n"
    "	// inline asm\n"
    "	add.f32 	%f961, %f958, 0f00000000;\n"
    "	ex2.approx.f32 	%f962, %f961;\n"
    "	mul.f32 	%f963, %f37, %f962;\n"
    "	setp.lt.f32	%p47, %f956, 0fC2D20000;\n"
    "	selp.f32	%f964, 0f00000000, %f963, %p47;\n"
    "	setp.gt.f32	%p48, %f956, 0f42D20000;\n"
    "	selp.f32	%f965, 0f7F800000, %f964, %p48;\n"
    "	mul.f32 	%f966, %f952, %f965;\n"
    "	mul.f32 	%f967, %f966, %f955;\n"
    "	mul.f32 	%f968, %f967, %f947;\n"
    "	ld.const.f32 	%f969, [%r113+12];\n"
    "	mul.f32 	%f970, %f969, 0f40C00000;\n"
    "	mul.f32 	%f971, %f970, %f950;\n"
    "	sub.f32 	%f972, %f968, %f971;\n"
    "	ld.const.f32 	%f973, [%r113+16];\n"
    "	mul.f32 	%f974, %f973, 0f41000000;\n"
    "	mul.f32 	%f975, %f974, %f950;\n"
    "	mul.f32 	%f976, %f975, %f948;\n"
    "	sub.f32 	%f977, %f972, %f976;\n"
    "	mul.f32 	%f978, %f948, %f947;\n"
    "	ld.const.f32 	%f979, [%r113+20];\n"
    "	fma.rn.f32 	%f980, %f978, %f979, %f977;\n"
    "	setp.eq.f32	%p49, %f945, 0f00000000;\n"
    "	selp.f32	%f981, 0f00000000, %f980, %p49;\n"
    "	ld.shared.f32 	%f982, [%r29];\n"
    "	fma.rn.f32 	%f983, %f981, %f930, %f982;\n"
    "	ld.shared.f32 	%f984, [%r29+4];\n"
    "	ld.shared.f32 	%f985, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f983;\n"
    "	fma.rn.f32 	%f986, %f981, %f937, %f984;\n"
    "	st.shared.f32 	[%r29+4], %f986;\n"
    "	fma.rn.f32 	%f987, %f981, %f944, %f985;\n"
    "	st.shared.f32 	[%r29+8], %f987;\n"
    "	ld.shared.f32 	%f988, [%r64+3840];\n"
    "	sub.f32 	%f989, %f2, %f988;\n"
    "	mul.f32 	%f990, %f989, %f1;\n"
    "	cvt.rni.f32.f32	%f991, %f990;\n"
    "	mul.f32 	%f992, %f991, %f5;\n"
    "	sub.f32 	%f993, %f989, %f992;\n"
    "	fma.rn.f32 	%f994, %f993, %f993, 0f00000000;\n"
    "	ld.shared.f32 	%f995, [%r64+3844];\n"
    "	sub.f32 	%f996, %f3, %f995;\n"
    "	mul.f32 	%f997, %f996, %f1;\n"
    "	cvt.rni.f32.f32	%f998, %f997;\n"
    "	mul.f32 	%f999, %f998, %f5;\n"
    "	sub.f32 	%f1000, %f996, %f999;\n"
    "	fma.rn.f32 	%f1001, %f1000, %f1000, %f994;\n"
    "	ld.shared.f32 	%f1002, [%r64+3848];\n"
    "	sub.f32 	%f1003, %f4, %f1002;\n"
    "	mul.f32 	%f1004, %f1003, %f1;\n"
    "	cvt.rni.f32.f32	%f1005, %f1004;\n"
    "	mul.f32 	%f1006, %f1005, %f5;\n"
    "	sub.f32 	%f1007, %f1003, %f1006;\n"
    "	fma.rn.f32 	%f1008, %f1007, %f1007, %f1001;\n"
    "	ld.shared.u32 	%r114, [%r64+3852];\n"
    "	add.s32 	%r115, %r114, %r2;\n"
    "	sqrt.rn.f32 	%f1009, %f1008;\n"
    "	rcp.rn.f32 	%f1010, %f1009;\n"
    "	mul.f32 	%f1011, %f1010, %f1010;\n"
    "	mul.f32 	%f1012, %f1011, %f1011;\n"
    "	mul.f32 	%f1013, %f1012, %f1012;\n"
    "	mad.lo.s32 	%r116, %r115, 24, %r67;\n"
    "	ld.const.f32 	%f1014, [%r116];\n"
    "	mul.f32 	%f1015, %f1014, 0f3C70319E;\n"
    "	ld.const.f32 	%f1016, [%r116+4];\n"
    "	sub.f32 	%f1017, %f1016, %f1009;\n"
    "	ld.const.f32 	%f1018, [%r116+8];\n"
    "	mul.f32 	%f1019, %f1017, %f1018;\n"
    "	mul.f32 	%f1020, %f1019, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f1021, %f1020;\n"
    "	fma.rn.f32 	%f1022, %f1021, %f75, %f1019;\n"
    "	fma.rn.f32 	%f1023, %f1021, %f77, %f1022;\n"
    "	mul.f32 	%f40, %f1023, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f39,%f40;\n"
    "	// inline asm\n"
    "	add.f32 	%f1024, %f1021, 0f00000000;\n"
    "	ex2.approx.f32 	%f1025, %f1024;\n"
    "	mul.f32 	%f1026, %f39, %f1025;\n"
    "	setp.lt.f32	%p50, %f1019, 0fC2D20000;\n"
    "	selp.f32	%f1027, 0f00000000, %f1026, %p50;\n"
    "	setp.gt.f32	%p51, %f1019, 0f42D20000;\n"
    "	selp.f32	%f1028, 0f7F800000, %f1027, %p51;\n"
    "	mul.f32 	%f1029, %f1015, %f1028;\n"
    "	mul.f32 	%f1030, %f1029, %f1018;\n"
    "	mul.f32 	%f1031, %f1030, %f1010;\n"
    "	ld.const.f32 	%f1032, [%r116+12];\n"
    "	mul.f32 	%f1033, %f1032, 0f40C00000;\n"
    "	mul.f32 	%f1034, %f1033, %f1013;\n"
    "	sub.f32 	%f1035, %f1031, %f1034;\n"
    "	ld.const.f32 	%f1036, [%r116+16];\n"
    "	mul.f32 	%f1037, %f1036, 0f41000000;\n"
    "	mul.f32 	%f1038, %f1037, %f1013;\n"
    "	mul.f32 	%f1039, %f1038, %f1011;\n"
    "	sub.f32 	%f1040, %f1035, %f1039;\n"
    "	mul.f32 	%f1041, %f1011, %f1010;\n"
    "	ld.const.f32 	%f1042, [%r116+20];\n"
    "	fma.rn.f32 	%f1043, %f1041, %f1042, %f1040;\n"
    "	setp.eq.f32	%p52, %f1008, 0f00000000;\n"
    "	selp.f32	%f1044, 0f00000000, %f1043, %p52;\n"
    "	ld.shared.f32 	%f1045, [%r29];\n"
    "	fma.rn.f32 	%f1046, %f1044, %f993, %f1045;\n"
    "	ld.shared.f32 	%f1047, [%r29+4];\n"
    "	ld.shared.f32 	%f1048, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f1046;\n"
    "	fma.rn.f32 	%f1049, %f1044, %f1000, %f1047;\n"
    "	st.shared.f32 	[%r29+4], %f1049;\n"
    "	fma.rn.f32 	%f1050, %f1044, %f1007, %f1048;\n"
    "	st.shared.f32 	[%r29+8], %f1050;\n"
    "	add.s32 	%r9, %r8, 256;\n"
    "	setp.lt.s32	%p53, %r9, %r4;\n"
    "	mov.u32 	%r168, %r9;\n"
    "	@%p53 bra 	BB1_4;\n"
    "\n"
    "	setp.gt.s32	%p54, %r8, -1;\n"
    "	mov.u32 	%r167, %r9;\n"
    "	@%p54 bra 	BB1_7;\n"
    "\n"
    "BB1_6:\n"
    "	.pragma \"nounroll\";\n"
    "	shl.b32 	%r117, %r167, 4;\n"
    "	add.s32 	%r119, %r59, %r117;\n"
    "	ld.shared.f32 	%f1053, [%r119];\n"
    "	sub.f32 	%f1054, %f2, %f1053;\n"
    "	mul.f32 	%f1055, %f1054, %f1;\n"
    "	cvt.rni.f32.f32	%f1056, %f1055;\n"
    "	mul.f32 	%f1057, %f1056, %f5;\n"
    "	sub.f32 	%f1058, %f1054, %f1057;\n"
    "	fma.rn.f32 	%f1059, %f1058, %f1058, 0f00000000;\n"
    "	ld.shared.f32 	%f1060, [%r119+4];\n"
    "	sub.f32 	%f1061, %f3, %f1060;\n"
    "	mul.f32 	%f1062, %f1061, %f1;\n"
    "	cvt.rni.f32.f32	%f1063, %f1062;\n"
    "	mul.f32 	%f1064, %f1063, %f5;\n"
    "	sub.f32 	%f1065, %f1061, %f1064;\n"
    "	fma.rn.f32 	%f1066, %f1065, %f1065, %f1059;\n"
    "	ld.shared.f32 	%f1067, [%r119+8];\n"
    "	sub.f32 	%f1068, %f4, %f1067;\n"
    "	mul.f32 	%f1069, %f1068, %f1;\n"
    "	cvt.rni.f32.f32	%f1070, %f1069;\n"
    "	mul.f32 	%f1071, %f1070, %f5;\n"
    "	sub.f32 	%f1072, %f1068, %f1071;\n"
    "	fma.rn.f32 	%f1073, %f1072, %f1072, %f1066;\n"
    "	ld.shared.u32 	%r120, [%r119+12];\n"
    "	add.s32 	%r121, %r120, %r2;\n"
    "	sqrt.rn.f32 	%f1074, %f1073;\n"
    "	rcp.rn.f32 	%f1075, %f1074;\n"
    "	mul.f32 	%f1076, %f1075, %f1075;\n"
    "	mul.f32 	%f1077, %f1076, %f1076;\n"
    "	mul.f32 	%f1078, %f1077, %f1077;\n"
    "	mov.u32 	%r122, c_matrix;\n"
    "	mad.lo.s32 	%r123, %r121, 24, %r122;\n"
    "	ld.const.f32 	%f1079, [%r123];\n"
    "	mul.f32 	%f1080, %f1079, 0f3C70319E;\n"
    "	ld.const.f32 	%f1081, [%r123+4];\n"
    "	sub.f32 	%f1082, %f1081, %f1074;\n"
    "	ld.const.f32 	%f1083, [%r123+8];\n"
    "	mul.f32 	%f1084, %f1082, %f1083;\n"
    "	mul.f32 	%f1085, %f1084, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f1086, %f1085;\n"
    "	mov.f32 	%f1087, 0fBF317200;\n"
    "	fma.rn.f32 	%f1088, %f1086, %f1087, %f1084;\n"
    "	mov.f32 	%f1089, 0fB5BFBE8E;\n"
    "	fma.rn.f32 	%f1090, %f1086, %f1089, %f1088;\n"
    "	mul.f32 	%f1052, %f1090, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f1051,%f1052;\n"
    "	// inline asm\n"
    "	add.f32 	%f1091, %f1086, 0f00000000;\n"
    "	ex2.approx.f32 	%f1092, %f1091;\n"
    "	mul.f32 	%f1093, %f1051, %f1092;\n"
    "	setp.lt.f32	%p55, %f1084, 0fC2D20000;\n"
    "	selp.f32	%f1094, 0f00000000, %f1093, %p55;\n"
    "	setp.gt.f32	%p56, %f1084, 0f42D20000;\n"
    "	selp.f32	%f1095, 0f7F800000, %f1094, %p56;\n"
    "	mul.f32 	%f1096, %f1080, %f1095;\n"
    "	mul.f32 	%f1097, %f1096, %f1083;\n"
    "	ld.const.f32 	%f1098, [%r123+12];\n"
    "	mul.f32 	%f1099, %f1098, 0fC0C00000;\n"
    "	mul.f32 	%f1100, %f1099, %f1078;\n"
    "	fma.rn.f32 	%f1101, %f1097, %f1075, %f1100;\n"
    "	ld.const.f32 	%f1102, [%r123+16];\n"
    "	mul.f32 	%f1103, %f1102, 0fC1000000;\n"
    "	mul.f32 	%f1104, %f1103, %f1078;\n"
    "	fma.rn.f32 	%f1105, %f1104, %f1076, %f1101;\n"
    "	mul.f32 	%f1106, %f1076, %f1075;\n"
    "	ld.const.f32 	%f1107, [%r123+20];\n"
    "	fma.rn.f32 	%f1108, %f1106, %f1107, %f1105;\n"
    "	setp.eq.f32	%p57, %f1073, 0f00000000;\n"
    "	selp.f32	%f1109, 0f00000000, %f1108, %p57;\n"
    "	ld.shared.f32 	%f1110, [%r29];\n"
    "	fma.rn.f32 	%f1111, %f1109, %f1058, %f1110;\n"
    "	ld.shared.f32 	%f1112, [%r29+4];\n"
    "	ld.shared.f32 	%f1113, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f1111;\n"
    "	fma.rn.f32 	%f1114, %f1109, %f1065, %f1112;\n"
    "	st.shared.f32 	[%r29+4], %f1114;\n"
    "	fma.rn.f32 	%f1115, %f1109, %f1072, %f1113;\n"
    "	st.shared.f32 	[%r29+8], %f1115;\n"
    "	add.s32 	%r167, %r167, 16;\n"
    "	setp.lt.s32	%p58, %r167, 256;\n"
    "	@%p58 bra 	BB1_6;\n"
    "\n"
    "BB1_7:\n"
    "	add.s32 	%r164, %r164, 256;\n"
    "	setp.lt.s32	%p59, %r164, %r3;\n"
    "	@%p59 bra 	BB1_2;\n"
    "\n"
    "BB1_8:\n"
    "	add.s32 	%r169, %r3, %r1;\n"
    "	setp.ge.s32	%p60, %r169, %r19;\n"
    "	@%p60 bra 	BB1_10;\n"
    "\n"
    "BB1_9:\n"
    "	shl.b32 	%r129, %r169, 4;\n"
    "	add.s32 	%r130, %r22, %r129;\n"
    "	ld.global.f32 	%f1118, [%r130];\n"
    "	sub.f32 	%f1119, %f2, %f1118;\n"
    "	mul.f32 	%f1120, %f1119, %f1;\n"
    "	cvt.rni.f32.f32	%f1121, %f1120;\n"
    "	mul.f32 	%f1122, %f1121, %f5;\n"
    "	sub.f32 	%f1123, %f1119, %f1122;\n"
    "	fma.rn.f32 	%f1124, %f1123, %f1123, 0f00000000;\n"
    "	ld.global.f32 	%f1125, [%r130+4];\n"
    "	sub.f32 	%f1126, %f3, %f1125;\n"
    "	mul.f32 	%f1127, %f1126, %f1;\n"
    "	cvt.rni.f32.f32	%f1128, %f1127;\n"
    "	mul.f32 	%f1129, %f1128, %f5;\n"
    "	sub.f32 	%f1130, %f1126, %f1129;\n"
    "	fma.rn.f32 	%f1131, %f1130, %f1130, %f1124;\n"
    "	ld.global.f32 	%f1132, [%r130+8];\n"
    "	sub.f32 	%f1133, %f4, %f1132;\n"
    "	mul.f32 	%f1134, %f1133, %f1;\n"
    "	cvt.rni.f32.f32	%f1135, %f1134;\n"
    "	mul.f32 	%f1136, %f1135, %f5;\n"
    "	sub.f32 	%f1137, %f1133, %f1136;\n"
    "	fma.rn.f32 	%f1138, %f1137, %f1137, %f1131;\n"
    "	ld.global.u32 	%r131, [%r130+12];\n"
    "	add.s32 	%r132, %r131, %r2;\n"
    "	sqrt.rn.f32 	%f1139, %f1138;\n"
    "	rcp.rn.f32 	%f1140, %f1139;\n"
    "	mul.f32 	%f1141, %f1140, %f1140;\n"
    "	mul.f32 	%f1142, %f1141, %f1141;\n"
    "	mul.f32 	%f1143, %f1142, %f1142;\n"
    "	mov.u32 	%r133, c_matrix;\n"
    "	mad.lo.s32 	%r134, %r132, 24, %r133;\n"
    "	ld.const.f32 	%f1144, [%r134];\n"
    "	mul.f32 	%f1145, %f1144, 0f3C70319E;\n"
    "	ld.const.f32 	%f1146, [%r134+4];\n"
    "	sub.f32 	%f1147, %f1146, %f1139;\n"
    "	ld.const.f32 	%f1148, [%r134+8];\n"
    "	mul.f32 	%f1149, %f1147, %f1148;\n"
    "	mul.f32 	%f1150, %f1149, 0f3FB8AA3B;\n"
    "	cvt.rzi.f32.f32	%f1151, %f1150;\n"
    "	mov.f32 	%f1152, 0fBF317200;\n"
    "	fma.rn.f32 	%f1153, %f1151, %f1152, %f1149;\n"
    "	mov.f32 	%f1154, 0fB5BFBE8E;\n"
    "	fma.rn.f32 	%f1155, %f1151, %f1154, %f1153;\n"
    "	mul.f32 	%f1117, %f1155, 0f3FB8AA3B;\n"
    "	// inline asm\n"
    "	ex2.approx.ftz.f32 %f1116,%f1117;\n"
    "	// inline asm\n"
    "	add.f32 	%f1156, %f1151, 0f00000000;\n"
    "	ex2.approx.f32 	%f1157, %f1156;\n"
    "	mul.f32 	%f1158, %f1116, %f1157;\n"
    "	setp.lt.f32	%p61, %f1149, 0fC2D20000;\n"
    "	selp.f32	%f1159, 0f00000000, %f1158, %p61;\n"
    "	setp.gt.f32	%p62, %f1149, 0f42D20000;\n"
    "	selp.f32	%f1160, 0f7F800000, %f1159, %p62;\n"
    "	mul.f32 	%f1161, %f1145, %f1160;\n"
    "	mul.f32 	%f1162, %f1161, %f1148;\n"
    "	ld.const.f32 	%f1163, [%r134+12];\n"
    "	mul.f32 	%f1164, %f1163, 0fC0C00000;\n"
    "	mul.f32 	%f1165, %f1164, %f1143;\n"
    "	fma.rn.f32 	%f1166, %f1162, %f1140, %f1165;\n"
    "	ld.const.f32 	%f1167, [%r134+16];\n"
    "	mul.f32 	%f1168, %f1167, 0fC1000000;\n"
    "	mul.f32 	%f1169, %f1168, %f1143;\n"
    "	fma.rn.f32 	%f1170, %f1169, %f1141, %f1166;\n"
    "	mul.f32 	%f1171, %f1141, %f1140;\n"
    "	ld.const.f32 	%f1172, [%r134+20];\n"
    "	fma.rn.f32 	%f1173, %f1171, %f1172, %f1170;\n"
    "	setp.eq.f32	%p63, %f1138, 0f00000000;\n"
    "	selp.f32	%f1174, 0f00000000, %f1173, %p63;\n"
    "	ld.shared.f32 	%f1175, [%r29];\n"
    "	fma.rn.f32 	%f1176, %f1174, %f1123, %f1175;\n"
    "	ld.shared.f32 	%f1177, [%r29+4];\n"
    "	ld.shared.f32 	%f1178, [%r29+8];\n"
    "	st.shared.f32 	[%r29], %f1176;\n"
    "	fma.rn.f32 	%f1179, %f1174, %f1130, %f1177;\n"
    "	st.shared.f32 	[%r29+4], %f1179;\n"
    "	fma.rn.f32 	%f1180, %f1174, %f1137, %f1178;\n"
    "	st.shared.f32 	[%r29+8], %f1180;\n"
    "	add.s32 	%r169, %r169, 16;\n"
    "	setp.lt.s32	%p64, %r169, %r19;\n"
    "	@%p64 bra 	BB1_9;\n"
    "\n"
    "BB1_10:\n"
    "	bar.sync 	0;\n"
    "	setp.gt.s32	%p65, %r25, 127;\n"
    "	@%p65 bra 	BB1_12;\n"
    "\n"
    "	ld.shared.f32 	%f1181, [%r29];\n"
    "	ld.shared.f32 	%f1182, [%r29+1536];\n"
    "	add.f32 	%f1183, %f1181, %f1182;\n"
    "	ld.shared.f32 	%f1184, [%r29+4];\n"
    "	ld.shared.f32 	%f1185, [%r29+1540];\n"
    "	ld.shared.f32 	%f1186, [%r29+8];\n"
    "	ld.shared.f32 	%f1187, [%r29+1544];\n"
    "	st.shared.f32 	[%r29], %f1183;\n"
    "	add.f32 	%f1188, %f1184, %f1185;\n"
    "	st.shared.f32 	[%r29+4], %f1188;\n"
    "	add.f32 	%f1189, %f1186, %f1187;\n"
    "	st.shared.f32 	[%r29+8], %f1189;\n"
    "\n"
    "BB1_12:\n"
    "	bar.sync 	0;\n"
    "	setp.gt.s32	%p66, %r25, 63;\n"
    "	@%p66 bra 	BB1_14;\n"
    "\n"
    "	ld.shared.f32 	%f1190, [%r29];\n"
    "	ld.shared.f32 	%f1191, [%r29+768];\n"
    "	add.f32 	%f1192, %f1190, %f1191;\n"
    "	ld.shared.f32 	%f1193, [%r29+4];\n"
    "	ld.shared.f32 	%f1194, [%r29+772];\n"
    "	ld.shared.f32 	%f1195, [%r29+8];\n"
    "	ld.shared.f32 	%f1196, [%r29+776];\n"
    "	st.shared.f32 	[%r29], %f1192;\n"
    "	add.f32 	%f1197, %f1193, %f1194;\n"
    "	st.shared.f32 	[%r29+4], %f1197;\n"
    "	add.f32 	%f1198, %f1195, %f1196;\n"
    "	st.shared.f32 	[%r29+8], %f1198;\n"
    "\n"
    "BB1_14:\n"
    "	bar.sync 	0;\n"
    "	setp.gt.s32	%p67, %r25, 31;\n"
    "	@%p67 bra 	BB1_16;\n"
    "\n"
    "	ld.shared.f32 	%f1199, [%r29];\n"
    "	ld.shared.f32 	%f1200, [%r29+384];\n"
    "	add.f32 	%f1201, %f1199, %f1200;\n"
    "	ld.shared.f32 	%f1202, [%r29+4];\n"
    "	ld.shared.f32 	%f1203, [%r29+388];\n"
    "	ld.shared.f32 	%f1204, [%r29+8];\n"
    "	ld.shared.f32 	%f1205, [%r29+392];\n"
    "	st.shared.f32 	[%r29], %f1201;\n"
    "	add.f32 	%f1206, %f1202, %f1203;\n"
    "	st.shared.f32 	[%r29+4], %f1206;\n"
    "	add.f32 	%f1207, %f1204, %f1205;\n"
    "	st.shared.f32 	[%r29+8], %f1207;\n"
    "\n"
    "BB1_16:\n"
    "	setp.gt.s32	%p68, %r25, 15;\n"
    "	@%p68 bra 	BB1_18;\n"
    "\n"
    "	ld.shared.f32 	%f1208, [%r29];\n"
    "	ld.shared.f32 	%f1209, [%r29+192];\n"
    "	add.f32 	%f1210, %f1208, %f1209;\n"
    "	ld.shared.f32 	%f1211, [%r29+4];\n"
    "	ld.shared.f32 	%f1212, [%r29+196];\n"
    "	ld.shared.f32 	%f1213, [%r29+8];\n"
    "	ld.shared.f32 	%f1214, [%r29+200];\n"
    "	st.shared.f32 	[%r29], %f1210;\n"
    "	add.f32 	%f1215, %f1211, %f1212;\n"
    "	st.shared.f32 	[%r29+4], %f1215;\n"
    "	add.f32 	%f1216, %f1213, %f1214;\n"
    "	st.shared.f32 	[%r29+8], %f1216;\n"
    "\n"
    "BB1_18:\n"
    "	add.s32 	%r152, %r25, 15;\n"
    "	setp.gt.u32	%p69, %r152, 30;\n"
    "	@%p69 bra 	BB1_20;\n"
    "\n"
    "	mul.lo.s32 	%r158, %r27, 3;\n"
    "	cvta.to.global.u32 	%r159, %r20;\n"
    "	shl.b32 	%r160, %r158, 2;\n"
    "	add.s32 	%r161, %r159, %r160;\n"
    "	ld.shared.f32 	%f1217, [%r29];\n"
    "	ld.shared.f32 	%f1218, [%r29+4];\n"
    "	ld.shared.f32 	%f1219, [%r29+8];\n"
    "	st.global.f32 	[%r161], %f1217;\n"
    "	st.global.f32 	[%r161+4], %f1218;\n"
    "	st.global.f32 	[%r161+8], %f1219;\n"
    "\n"
    "BB1_20:\n"
    "	ret;\n"
    "}\n"
    "\n"
    ".visible .entry _Z18rem_offset_kernelliPf(\n"
    "	.param .u32 _Z18rem_offset_kernelliPf_param_0,\n"
    "	.param .u32 _Z18rem_offset_kernelliPf_param_1\n"
    ")\n"
    "{\n"
    "	.reg .pred 	%p<3>;\n"
    "	.reg .s32 	%r<13>;\n"
    "	.reg .f32 	%f<23>;\n"
    "	.reg .s64 	%rd<5>;\n"
    "\n"
    "\n"
    "	ld.param.u32 	%r4, [_Z18rem_offset_kernelliPf_param_1];\n"
    "	cvta.to.global.u32 	%r5, %r4;\n"
    "	mov.u32 	%r6, %ntid.x;\n"
    "	mov.u32 	%r7, %ctaid.x;\n"
    "	mov.u32 	%r8, %tid.x;\n"
    "	mad.lo.s32 	%r1, %r6, %r7, %r8;\n"
    "	ld.param.s32 	%rd1, [_Z18rem_offset_kernelliPf_param_0];\n"
    "	mul.lo.s64 	%rd2, %rd1, 1431655766;\n"
    "	shr.u64 	%rd3, %rd2, 63;\n"
    "	cvt.u32.u64	%r9, %rd3;\n"
    "	shr.u64 	%rd4, %rd2, 32;\n"
    "	cvt.u32.u64	%r10, %rd4;\n"
    "	add.s32 	%r2, %r10, %r9;\n"
    "	setp.lt.s32	%p1, %r1, %r2;\n"
    "	mul.lo.s32 	%r11, %r1, 3;\n"
    "	shl.b32 	%r12, %r11, 2;\n"
    "	add.s32 	%r3, %r5, %r12;\n"
    "	@%p1 bra 	BB2_2;\n"
    "\n"
    "	mov.f32 	%f22, 0f00000000;\n"
    "	mov.f32 	%f21, %f22;\n"
    "	mov.f32 	%f20, %f22;\n"
    "	bra.uni 	BB2_3;\n"
    "\n"
    "BB2_2:\n"
    "	ld.global.f32 	%f22, [%r3];\n"
    "	ld.global.f32 	%f21, [%r3+4];\n"
    "	ld.global.f32 	%f20, [%r3+8];\n"
    "\n"
    "BB2_3:\n"
    "	cvt.rn.f32.s32	%f13, %r2;\n"
    "	div.rn.f32 	%f7, %f22, %f13;\n"
    "	div.rn.f32 	%f8, %f21, %f13;\n"
    "	div.rn.f32 	%f9, %f20, %f13;\n"
    "	setp.ge.s32	%p2, %r1, %r2;\n"
    "	@%p2 bra 	BB2_5;\n"
    "\n"
    "	ld.global.f32 	%f14, [%r3];\n"
    "	sub.f32 	%f15, %f14, %f7;\n"
    "	ld.global.f32 	%f16, [%r3+4];\n"
    "	ld.global.f32 	%f17, [%r3+8];\n"
    "	st.global.f32 	[%r3], %f15;\n"
    "	sub.f32 	%f18, %f16, %f8;\n"
    "	st.global.f32 	[%r3+4], %f18;\n"
    "	sub.f32 	%f19, %f17, %f9;\n"
    "	st.global.f32 	[%r3+8], %f19;\n"
    "\n"
    "BB2_5:\n"
    "	ret;\n"
    "}\n"
    "\n"
    ".visible .entry _Z15velforce_kerneliPfS_S_P7VG_XVECPifS_(\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_0,\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_1,\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_2,\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_3,\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_4,\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_5,\n"
    "	.param .f32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_6,\n"
    "	.param .u32 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_7\n"
    ")\n"
    "{\n"
    "	.reg .pred 	%p<7>;\n"
    "	.reg .s32 	%r<61>;\n"
    "	.reg .f32 	%f<21>;\n"
    "	.reg .s64 	%rd<7>;\n"
    "	// demoted variable\n"
    "	.shared .align 4 .b8 _Z15velforce_kerneliPfS_S_P7VG_XVECPifS_$__cuda_local_var_37736_32_non_const_cache[256];\n"
    "\n"
    "	ld.param.u32 	%r12, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_0];\n"
    "	ld.param.u32 	%r13, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_1];\n"
    "	ld.param.u32 	%r16, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_2];\n"
    "	ld.param.u32 	%r14, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_3];\n"
    "	ld.param.u32 	%r17, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_4];\n"
    "	ld.param.u32 	%r18, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_5];\n"
    "	ld.param.f32 	%f3, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_6];\n"
    "	ld.param.u32 	%r15, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS__param_7];\n"
    "	cvta.to.global.u32 	%r1, %r16;\n"
    "	cvta.to.global.u32 	%r2, %r18;\n"
    "	cvta.to.global.u32 	%r3, %r17;\n"
    "	mov.u32 	%r4, %ntid.x;\n"
    "	mov.u32 	%r5, %ctaid.x;\n"
    "	mov.u32 	%r6, %tid.x;\n"
    "	mad.lo.s32 	%r7, %r4, %r5, %r6;\n"
    "	setp.ge.s32	%p1, %r7, %r12;\n"
    "	@%p1 bra 	BB3_2;\n"
    "\n"
    "	cvta.to.global.u32 	%r19, %r13;\n"
    "	mul.wide.s32 	%rd1, %r7, 1431655766;\n"
    "	shr.u64 	%rd2, %rd1, 63;\n"
    "	cvt.u32.u64	%r20, %rd2;\n"
    "	shr.u64 	%rd3, %rd1, 32;\n"
    "	cvt.u32.u64	%r21, %rd3;\n"
    "	add.s32 	%r22, %r21, %r20;\n"
    "	shl.b32 	%r23, %r22, 4;\n"
    "	add.s32 	%r24, %r3, %r23;\n"
    "	ld.global.u32 	%r25, [%r24+12];\n"
    "	shl.b32 	%r26, %r25, 2;\n"
    "	add.s32 	%r27, %r2, %r26;\n"
    "	ld.global.u32 	%r28, [%r27];\n"
    "	shl.b32 	%r29, %r28, 2;\n"
    "	add.s32 	%r30, %r1, %r29;\n"
    "	ld.global.f32 	%f4, [%r30];\n"
    "	div.rn.f32 	%f5, %f3, %f4;\n"
    "	shl.b32 	%r31, %r7, 2;\n"
    "	add.s32 	%r32, %r19, %r31;\n"
    "	ld.global.f32 	%f6, [%r32];\n"
    "	mul.f32 	%f7, %f6, %f5;\n"
    "	st.global.f32 	[%r32], %f7;\n"
    "\n"
    "BB3_2:\n"
    "	mul.wide.s32 	%rd4, %r12, 1431655766;\n"
    "	shr.u64 	%rd5, %rd4, 63;\n"
    "	cvt.u32.u64	%r33, %rd5;\n"
    "	shr.u64 	%rd6, %rd4, 32;\n"
    "	cvt.u32.u64	%r34, %rd6;\n"
    "	add.s32 	%r35, %r34, %r33;\n"
    "	setp.lt.s32	%p2, %r7, %r35;\n"
    "	@%p2 bra 	BB3_4;\n"
    "\n"
    "	mov.f32 	%f20, 0f00000000;\n"
    "	bra.uni 	BB3_5;\n"
    "\n"
    "BB3_4:\n"
    "	cvta.to.global.u32 	%r36, %r14;\n"
    "	mul.lo.s32 	%r37, %r7, 3;\n"
    "	shl.b32 	%r38, %r37, 2;\n"
    "	add.s32 	%r39, %r36, %r38;\n"
    "	ld.global.f32 	%f9, [%r39];\n"
    "	ld.global.f32 	%f10, [%r39+4];\n"
    "	mul.f32 	%f11, %f10, %f10;\n"
    "	fma.rn.f32 	%f12, %f9, %f9, %f11;\n"
    "	ld.global.f32 	%f13, [%r39+8];\n"
    "	fma.rn.f32 	%f14, %f13, %f13, %f12;\n"
    "	shl.b32 	%r40, %r7, 4;\n"
    "	add.s32 	%r41, %r3, %r40;\n"
    "	ld.global.u32 	%r42, [%r41+12];\n"
    "	shl.b32 	%r43, %r42, 2;\n"
    "	add.s32 	%r44, %r2, %r43;\n"
    "	ld.global.u32 	%r45, [%r44];\n"
    "	shl.b32 	%r46, %r45, 2;\n"
    "	add.s32 	%r47, %r1, %r46;\n"
    "	ld.global.f32 	%f15, [%r47];\n"
    "	mul.f32 	%f20, %f14, %f15;\n"
    "\n"
    "BB3_5:\n"
    "	shl.b32 	%r48, %r6, 2;\n"
    "	mov.u32 	%r49, _Z15velforce_kerneliPfS_S_P7VG_XVECPifS_$__cuda_local_var_37736_32_non_const_cache;\n"
    "	add.s32 	%r8, %r49, %r48;\n"
    "	st.shared.f32 	[%r8], %f20;\n"
    "	bar.sync 	0;\n"
    "	shr.u32 	%r60, %r4, 1;\n"
    "	setp.eq.s32	%p3, %r60, 0;\n"
    "	@%p3 bra 	BB3_9;\n"
    "\n"
    "BB3_6:\n"
    "	mov.u32 	%r10, %r60;\n"
    "	setp.ge.s32	%p4, %r6, %r10;\n"
    "	@%p4 bra 	BB3_8;\n"
    "\n"
    "	add.s32 	%r50, %r10, %r6;\n"
    "	shl.b32 	%r51, %r50, 2;\n"
    "	add.s32 	%r53, %r49, %r51;\n"
    "	ld.shared.f32 	%f16, [%r8];\n"
    "	ld.shared.f32 	%f17, [%r53];\n"
    "	add.f32 	%f18, %f16, %f17;\n"
    "	st.shared.f32 	[%r8], %f18;\n"
    "\n"
    "BB3_8:\n"
    "	bar.sync 	0;\n"
    "	shr.u32 	%r54, %r10, 31;\n"
    "	add.s32 	%r55, %r10, %r54;\n"
    "	shr.s32 	%r60, %r55, 1;\n"
    "	add.s32 	%r56, %r10, 1;\n"
    "	setp.gt.u32	%p5, %r56, 2;\n"
    "	@%p5 bra 	BB3_6;\n"
    "\n"
    "BB3_9:\n"
    "	setp.ne.s32	%p6, %r6, 0;\n"
    "	@%p6 bra 	BB3_11;\n"
    "\n"
    "	cvta.to.global.u32 	%r57, %r15;\n"
    "	ld.shared.f32 	%f19, [_Z15velforce_kerneliPfS_S_P7VG_XVECPifS_$__cuda_local_var_37736_32_non_const_cache];\n"
    "	shl.b32 	%r58, %r5, 2;\n"
    "	add.s32 	%r59, %r57, %r58;\n"
    "	st.global.f32 	[%r59], %f19;\n"
    "\n"
    "BB3_11:\n"
    "	ret;\n"
    "}\n"
    "\n"
    ".visible .entry _Z12serie_kernelPfS_S_S_fffiifffS_i(\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_0,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_1,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_2,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_3,\n"
    "	.param .f32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_4,\n"
    "	.param .f32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_5,\n"
    "	.param .f32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_6,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_7,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_8,\n"
    "	.param .f32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_9,\n"
    "	.param .f32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_10,\n"
    "	.param .f32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_11,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_12,\n"
    "	.param .u32 _Z12serie_kernelPfS_S_S_fffiifffS_i_param_13\n"
    ")\n"
    "{\n"
    "	.reg .pred 	%p<3>;\n"
    "	.reg .s32 	%r<21>;\n"
    "	.reg .f32 	%f<28>;\n"
    "\n"
    "\n"
    "	ld.param.u32 	%r5, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_0];\n"
    "	ld.param.u32 	%r6, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_1];\n"
    "	ld.param.u32 	%r7, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_2];\n"
    "	ld.param.u32 	%r11, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_3];\n"
    "	ld.param.f32 	%f5, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_4];\n"
    "	ld.param.f32 	%f6, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_5];\n"
    "	ld.param.f32 	%f7, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_6];\n"
    "	ld.param.u32 	%r8, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_7];\n"
    "	ld.param.u32 	%r9, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_8];\n"
    "	ld.param.f32 	%f8, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_9];\n"
    "	ld.param.f32 	%f9, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_10];\n"
    "	ld.param.f32 	%f10, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_11];\n"
    "	ld.param.u32 	%r12, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_12];\n"
    "	ld.param.u32 	%r10, [_Z12serie_kernelPfS_S_S_fffiifffS_i_param_13];\n"
    "	cvta.to.global.u32 	%r1, %r12;\n"
    "	cvta.to.global.u32 	%r2, %r11;\n"
    "	ldu.global.f32 	%f1, [%r2];\n"
    "	mov.f32 	%f27, 0f00000000;\n"
    "	setp.gt.s32	%p1, %r10, 0;\n"
    "	@%p1 bra 	BB4_1;\n"
    "	bra.uni 	BB4_3;\n"
    "\n"
    "BB4_1:\n"
    "	mov.u32 	%r20, 0;\n"
    "\n"
    "BB4_2:\n"
    "	shl.b32 	%r14, %r20, 2;\n"
    "	add.s32 	%r15, %r1, %r14;\n"
    "	ldu.global.f32 	%f13, [%r15];\n"
    "	add.f32 	%f27, %f27, %f13;\n"
    "	add.s32 	%r20, %r20, 1;\n"
    "	setp.lt.s32	%p2, %r20, %r10;\n"
    "	@%p2 bra 	BB4_2;\n"
    "\n"
    "BB4_3:\n"
    "	cvta.to.global.u32 	%r16, %r7;\n"
    "	cvta.to.global.u32 	%r17, %r6;\n"
    "	cvta.to.global.u32 	%r18, %r5;\n"
    "	div.rn.f32 	%f14, %f27, %f10;\n"
    "	st.global.f32 	[%r18], %f14;\n"
    "	mul.f32 	%f15, %f14, %f5;\n"
    "	st.global.f32 	[%r17], %f15;\n"
    "	ld.global.f32 	%f16, [%r18];\n"
    "	sub.f32 	%f17, %f16, %f7;\n"
    "	div.rn.f32 	%f18, %f6, 0f40400000;\n"
    "	mul.f32 	%f19, %f18, %f17;\n"
    "	add.s32 	%r19, %r9, %r8;\n"
    "	cvt.rn.f32.s32	%f20, %r19;\n"
    "	div.rn.f32 	%f21, %f19, %f20;\n"
    "	st.global.f32 	[%r16], %f21;\n"
    "	ld.global.f32 	%f22, [%r17];\n"
    "	sub.f32 	%f23, %f22, %f8;\n"
    "	div.rn.f32 	%f24, %f23, %f9;\n"
    "	mul.f32 	%f25, %f24, %f10;\n"
    "	fma.rn.f32 	%f26, %f25, 0f3F000000, %f1;\n"
    "	st.global.f32 	[%r2], %f26;\n"
    "	ret;\n"
    "}\n"
    "\n"
    "\n";
#pragma dscuda endofptx
#include "dscuda.h"
/*Archivo mr3.cu que contiene el codigo para CUDA.
    Renderizacion por OpenGL-CUDA interoperability
    Nucleo del codigo para calcular la fuerza entre particulas
    Creado por: Martinez Noriega Edgar Josafat
*/
#include <sys/time.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>
// ***** CUDA includes
#include <cutil.h>

#define GL_ON
#define KER
#define NMAX      8192
#define NTHRE       64
#define ATYPE        8
#define ATYPE2    (ATYPE * ATYPE)
#define ThreadsPB 64
//////For NaCl Optminized if_kernel
#define NTHREOPT      256
#define NDIVBIT      4
#define NDIV      (1<<NDIVBIT)
#define NTHREOPT2    (NTHREOPT/NDIV)

typedef struct {
  float r[3];
  int atype;
} VG_XVEC;

typedef struct {
  float pol;
  float sigm;
  float ipotro;
  float pc;
  float pd;
  float zz;
} VG_MATRIX;


/////////GLOBAL Variables/////////////////////////////////////////
int   *d_atypemat;
VG_XVEC *d_x=NULL;
int mem_flg=0;
int mem_flg2=0;
int mem_sp=5;
int mem_cpu=0;
int flg1=0,flg2=0,flg3=0;

//////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////FORCE CALCULATION WITH GPU/////////////////////////////////////
//////////////////////////////////////////////////////////////////////

__global__
void update_coor_kernel(int n3, float *vl,VG_XVEC *cd,float *xs,
                        float *fc,float *side){
#ifdef KER
	int tid  = threadIdx.x + blockIdx.x * blockDim.x;

    if (tid < n3){
            vl[tid]   =  (vl[tid]*(1-(*xs))+fc[tid])/(1+(*xs));
            cd[tid/3].r[tid % 3]   +=   vl[tid];
			if (cd[tid/3].r[tid % 3] < 0 || cd[tid/3].r[tid % 3] > side[tid % 3]) vl[tid] *= -1;
    }
#endif
}

//////////////////NaCl Optmized
///////////////////////////////

__constant__ VG_MATRIX c_matrix[4]={
[0].pol=1.250000,[0].sigm=2.340000,[0].ipotro=3.154574,[0].pc=0.072868,[0].pd=0.034699,[0].zz=1.000000,
[1].pol=1.000000,[1].sigm=2.755000,[1].ipotro=3.154574,[1].pc=0.485784,[1].pd=0.602893,[1].zz=-1.000000,
[2].pol=1.000000,[2].sigm=2.755000,[2].ipotro=3.154574,[2].pc=0.485784,[2].pd=0.602893,[2].zz=-1.000000,
[3].pol=0.750000,[3].sigm=3.170000,[3].ipotro=3.154574,[3].pc=5.031334,[3].pd=10.106042,[3].zz=1.000000,
};

__device__ __inline__
void inter_if(float xj[3], float xi[3], float fi[3], int t, float xmax,
		float xmax1) {
#ifdef KER
	int k;
	float dn2, r, inr, inr2, inr4, inr8, d3, dr[3];
	float pb = (float) (0.338e-19 / (14.39 * 1.60219e-19)), dphir;

	dn2 = 0.0f;
	for (k = 0; k < 3; k++) {
		dr[k] = xi[k] - xj[k];
		dr[k] -= rintf(dr[k] * xmax1) * xmax;
		dn2 += dr[k] * dr[k];
	}
	r = sqrtf(dn2);
#if 1
	inr = 1.0f / r;
#elif 0
	if(dn2 != 0.0f) inr = 1.0f / r;
	else inr = 0.0f;
#elif 0
	if(dn2 == 0.0f) inr = 0.0f;
	else inr = 1.0f / r;
#else
	inr = 1.0f / r;
	if(dn2 == 0.0f) inr = 0.0f;
#endif
	inr2 = inr * inr;
	inr4 = inr2 * inr2;
	inr8 = inr4 * inr4;
	d3 = pb * c_matrix[t].pol
			* expf((c_matrix[t].sigm - r) * c_matrix[t].ipotro);
	dphir =
			(d3 * c_matrix[t].ipotro * inr - 6.0f * c_matrix[t].pc * inr8
					- 8.0f * c_matrix[t].pd * inr8 * inr2
					+ inr2 * inr * c_matrix[t].zz);
#if 1
	if (dn2 == 0.0f)
		dphir = 0.0f;
#endif
	for (k = 0; k < 3; k++)
		fi[k] += dphir * dr[k];
#endif
}

__global__
void nacl_kernel_if2(VG_XVEC *x, int n, int nat, float xmax, float *fvec) {
#ifdef KER
	int tid = threadIdx.x;
	int jdiv = tid / NTHREOPT2;
	int i = blockIdx.x * NTHREOPT2 + (tid & (NTHREOPT2 - 1));
	int j, k;
	float xmax1 = 1.0f / xmax;
	int atypei;
	float xi[3];
	__shared__ VG_XVEC s_xj[NTHREOPT];
	__shared__ float s_fi[NTHREOPT][3];

	for (k = 0; k < 3; k++)
		s_fi[tid][k] = 0.0f;
	for (k = 0; k < 3; k++)
		xi[k] = x[i].r[k];
	atypei = x[i].atype * nat;
	int na;
	na = n / NTHREOPT;
	na = na * NTHREOPT;
	for (j = 0; j < na; j += NTHREOPT) {
		__syncthreads();
		s_xj[tid] = x[j + tid];
		__syncthreads();
#pragma unroll 16
		for (int js = jdiv; js < NTHREOPT; js += NDIV)
			inter_if(s_xj[js].r, xi, s_fi[tid], atypei + s_xj[js].atype, xmax,
					xmax1);
	}
	for (j = na + jdiv; j < n; j += NDIV) {
		inter_if(x[j].r, xi, s_fi[tid], atypei + x[j].atype, xmax, xmax1);
	}
#if NTHREOPT>=512 && NTHREOPT2<=256
	__syncthreads();
	if(tid<256) for(k=0;k<3;k++) s_fi[tid][k]+=s_fi[tid+256][k];
#endif
#if NTHREOPT>=256 && NTHREOPT2<=128
	__syncthreads();
	if (tid < 128)
		for (k = 0; k < 3; k++)
			s_fi[tid][k] += s_fi[tid + 128][k];
#endif
#if NTHREOPT>=128 && NTHREOPT2<=64
	__syncthreads();
	if (tid < 64)
		for (k = 0; k < 3; k++)
			s_fi[tid][k] += s_fi[tid + 64][k];
#endif
#if NTHREOPT>=64 && NTHREOPT2<=32
	__syncthreads();
	if (tid < 32)
		for (k = 0; k < 3; k++)
			s_fi[tid][k] += s_fi[tid + 32][k];
#endif
#if NTHREOPT2<=16
	if (tid < 16)
		for (k = 0; k < 3; k++)
			s_fi[tid][k] += s_fi[tid + 16][k];
#endif
#if NTHREOPT2<=8
	if(tid<8) for(k=0;k<3;k++) s_fi[tid][k]+=s_fi[tid+8][k];
#endif
#if NTHREOPT2<=4
	if(tid<4) for(k=0;k<3;k++) s_fi[tid][k]+=s_fi[tid+4][k];
#endif
#if NTHREOPT2<=2
	if(tid<2) for(k=0;k<3;k++) s_fi[tid][k]+=s_fi[tid+2][k];
#endif
#if NTHREOPT2<=1
	if(tid<1) for(k=0;k<3;k++) s_fi[tid][k]+=s_fi[tid+1][k];
#endif
	if (jdiv == 0)
		for (k = 0; k < 3; k++)
			fvec[i * 3 + k] = s_fi[tid][k];
#endif
}

 __global__
void rem_offset_kernell (int n3, float *force){
#ifdef KER
	int tid = threadIdx.x + blockIdx.x *blockDim.x;

	float center [3];
	center[0]=0.0;
	center[1]=0.0;
	center[2]=0.0;

	if(tid < n3/3) {
			center[0]=force[tid*3];
			center[1]=force[tid*3+1];
			center[2]=force[tid*3+2];
	 }

	center[0]/=n3/3;
	center[1]/=n3/3;
	center[2]/=n3/3;

    if (tid < n3/3){
		 force[tid*3]-= center[0];
		 force[tid*3+1]-= center[1];
		 force[tid*3+2]-=  center[2];
	}
#endif
}


__global__
void velforce_kernel(int n3, float *fc, float *a_mass, float *vl,
                     VG_XVEC *atype, int *atype_mat, float hsq,float *ekin1){
#ifdef KER
	__shared__ float cache [ThreadsPB];
    int indx = threadIdx.x;
	int tid  = threadIdx.x + blockIdx.x * blockDim.x;

	float tmp = 0;

    if (tid < n3 ){
		fc[tid] *= hsq/a_mass[atype_mat[atype[tid/3].atype]];

	}

	if(tid < n3/3){
        tmp  = (vl[tid*3]*vl[tid*3 ]    +
                vl[tid*3+1]*vl[tid*3+1]	+
                vl[tid*3+2]*vl[tid*3+2])* a_mass[atype_mat[atype[tid].atype]];

    }

	cache [indx] = tmp;
    __syncthreads();

    int i = blockDim.x/2;

	while (i != 0){

        if (indx < i) cache[indx] += cache [indx + i];
        __syncthreads();
        i /= 2;
    }

	if (indx == 0) ekin1[blockIdx.x] = cache [0];
#endif
}


__global__
void serie_kernel (	float *ekin,float *mtemp,float *mpres,float *xs,float tscale,
                    float nden, float vir,int s_num,int w_num,float rtemp,
					float lq,float hsq,float *ekin1a, int limi){


#ifdef KER
		float aux = 0;
		float aux1 = *xs;

		for(int p=0;p<limi;p++)aux += ekin1a[p];
		*ekin = aux;
		*ekin /= hsq;
        *mtemp = tscale * (*ekin);
        *mpres  = nden / 3.f * ((*ekin) - (vir)) / (s_num + w_num);
        aux1 += (*mtemp - rtemp) /  lq * hsq *.5f;
		*xs = aux1;
#endif
}



extern "C"
void mdlop(int n3,int grape_flg,double phi [3],double *phir,double *iphi, double *vir,int s_num3,
			timeval time_v,double *md_time0,double *md_time,int *m_clock,int md_step,double *mtemp,
			double tscale,double *mpres,double nden,int s_num,int w_num,double rtemp,double lq,
			double x[], int n, int atype[], int nat,
			double pol[], double sigm[], double ipotro[],
		 	double pc[], double pd[],double zz[],
		 	int tblno, double xmax, int periodicflag,
		 	double force[],
			double hsq,double a_mass [], int atype_mat [], double *ekin,double *vl,
			double *xs,double side []){

//////////////VARIABLES FROM HE BEGINING/////////////////
  int md_loop;
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
  int i,j;
  float *d_force=NULL;
  float xmaxf;
  //VG_MATRIX *matrix=NULL;
  VG_XVEC   *vec=NULL;
  if((periodicflag & 1)==0) xmax*=2.0;
  xmaxf=xmax;
  float *forcef=NULL;
  int n_bak=0;

/////////////////////////////////////////////////////////

	int  blocksPGrid = (n3 + ThreadsPB - 1)/(ThreadsPB);
	dim3 THREADS(NTHRE);
	dim3 BLOCKS((n3 + ThreadsPB - 1)/(ThreadsPB));
	dim3 threads(NTHREOPT);
	dim3 grid((n * NDIV + NTHREOPT - 1) / NTHREOPT);


	float   *d_side;
	float   fxs = *xs;
	float   fside[3],*ffc;
	float   *vla;

	float   *d_amass,*d_vl;
	int     p = 0;
	float   hsqf = hsq;
	float   *fvl,fa_mass[4];

	ffc = (float*)malloc(n3*sizeof(float));
	fvl = (float*)malloc(n3*sizeof(float));

	float *d_ekin1,*ekin1a,ekinaux;

	float ftscale = tscale,fnden = nden,frtemp = rtemp,flq = lq,fvir = 0;
	float fmtemp = *mtemp,fmpres = *mpres;
	float *d_ekin,*d_xs,*d_mtemp,*d_mpres;

	for (p=0;p<4;p++) fa_mass[p] = (float) a_mass[p];
	for (p=0;p<3;p++) fside[p] = (float) side[p];
	for (p=0;p<n3;p++){
		fvl     [p] =  (float) *(vl +p);
		ffc     [p] =  (float) *(force +p);
	}
/////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////


  if(sizeof(double)*n*3<sizeof(VG_MATRIX)*nat*nat){
    fprintf(stderr,"** ethreadIdx.xrror : n*3<nat*nat **\n");
    exit(1);
  }
  if(nat>ATYPE){
    fprintf(stderr,"** error : nat is too large **\n");
    exit(1);
  }

  if(n!=n_bak){
    int nalloc;
    int nalloc_bak=0;
    if(n>NMAX) nalloc=n;
    else       nalloc=NMAX;
    if(nalloc!=nalloc_bak){
  		vec   =(VG_XVEC*)  malloc((nalloc+NTHREOPT2)*sizeof(VG_XVEC));
  		CUDA_SAFE_CALL(cudaMalloc((void**)&d_x,sizeof(VG_XVEC)* (nalloc + NTHREOPT2)));
  		CUDA_SAFE_CALL(cudaMalloc((void**)&d_force,sizeof(float)*(nalloc + NTHREOPT2)*3));
  		free(forcef);
  		if((forcef=(float *)malloc(sizeof(float)*nalloc*3))==NULL){
    	  fprintf(stderr,"** error : can't malloc forcef **\n");
    	  exit(1);
  		}

  	memset(forcef,0,sizeof(float)*nalloc*3);
    nalloc_bak=nalloc;
    }

	n_bak=n;
  }


	for (i = 0; i < (n + NTHREOPT2 - 1) / NTHREOPT2 * NTHREOPT2; i++) {
		if (i < n) {
			for (j = 0; j < 3; j++) {
				vec[i].r[j] = x[i * 3 + j];
			}
			vec[i].atype = atype[i];
		} else {
			for (j = 0; j < 3; j++) {
				vec[i].r[j] = 0.0f;
			}
			vec[i].atype = 0;
		}
	}

///////////////////////////////////////////////////////////////////
 // ensure force has enough size for temporary array
  	if(sizeof(double)*n*3<sizeof(float)*nat*nat){
    	fprintf(stderr,"** error : n*3<nat*nat **\n");
    	exit(1);
  	}
//////////////////////////
////////// allocate global memory and copy from host to GPU

    vla 	= (float*)malloc(n3*sizeof(float));
	ekin1a 	= (float*)malloc(blocksPGrid*sizeof(float));

#if 1
	CUDA_SAFE_CALL(cudaMalloc((void**)&d_side,3*sizeof(float)));
    CUDA_SAFE_CALL(cudaMalloc((void**)&d_amass,4*sizeof(float)));
    CUDA_SAFE_CALL(cudaMalloc((void**)&d_vl,n3*sizeof(float)));
    CUDA_SAFE_CALL(cudaMalloc((void**)&d_atypemat,20*sizeof(int)));
	CUDA_SAFE_CALL(cudaMalloc((void**)&d_ekin,sizeof(float)));
	CUDA_SAFE_CALL(cudaMalloc((void**)&d_xs,sizeof(float)));
	CUDA_SAFE_CALL(cudaMalloc((void**)&d_mtemp,sizeof(float)));
	CUDA_SAFE_CALL(cudaMalloc((void**)&d_mpres,sizeof(float)));
	CUDA_SAFE_CALL(cudaMalloc((void**)&d_ekin1,blocksPGrid*sizeof(float)));

	CUDA_SAFE_CALL(cudaMemcpy(d_x,vec,sizeof(VG_XVEC)*((n + NTHREOPT2 - 1) / NTHREOPT2 * NTHREOPT2),cudaMemcpyHostToDevice));
	CUDA_SAFE_CALL(cudaMemcpy(d_side,fside,sizeof(float)*3,cudaMemcpyHostToDevice));
	CUDA_SAFE_CALL(cudaMemcpy(d_mtemp,&fmtemp,sizeof(float),cudaMemcpyHostToDevice));
	CUDA_SAFE_CALL(cudaMemcpy(d_mpres,&fmpres,sizeof(float),cudaMemcpyHostToDevice));
	CUDA_SAFE_CALL(cudaMemcpy(d_xs,&fxs,sizeof(float),cudaMemcpyHostToDevice));
    CUDA_SAFE_CALL(cudaMemcpy(d_vl,fvl,sizeof(float)*n3,cudaMemcpyHostToDevice));
    CUDA_SAFE_CALL(cudaMemcpy(d_amass,fa_mass,sizeof(float)*4,cudaMemcpyHostToDevice));
    CUDA_SAFE_CALL(cudaMemcpy(d_atypemat,atype_mat,sizeof(int)*20,cudaMemcpyHostToDevice));
	CUDA_SAFE_CALL(cudaMemcpy(d_force,ffc,sizeof(float)*n*3,cudaMemcpyHostToDevice));

///////Md_loop///////////////////////////////////////////////
	for(md_loop = 0; md_loop < md_step; md_loop++){
    	*m_clock+=1;


	 	update_coor_kernel<<<BLOCKS,THREADS>>>(n3,d_vl,d_x,d_xs,d_force,d_side);

	 	gettimeofday(&time_v,NULL);
	 	*md_time0 = (time_v.tv_sec + time_v.tv_usec / 1000000.0);

		nacl_kernel_if2<<<grid, threads>>>(d_x, n, nat, xmaxf, d_force);

		cudaThreadSynchronize();

		gettimeofday(&time_v,NULL);
		*md_time = (time_v.tv_sec + time_v.tv_usec / 1000000.0);

		rem_offset_kernell<<<BLOCKS,THREADS>>>(n3,d_force);
		velforce_kernel<<<BLOCKS,THREADS>>>(n3,d_force,d_amass,d_vl,d_x,d_atypemat,hsqf,d_ekin1);
		serie_kernel<<<1,1>>>(d_ekin,d_mtemp,d_mpres,d_xs,ftscale,fnden,fvir,s_num,w_num,frtemp,flq,hsqf,d_ekin1,blocksPGrid);

#ifndef GL_ON
/////////Print System Information
	//printf("Force Computation Speed: %.3fs/step %.1fGflops\n",md_time-md_time0,(double)n*(double)n*78/(md_time-md_time0)*1e-9);
#endif
	}

/////////////////Copy back to the CPU
	CUDA_SAFE_CALL(cudaMemcpy(forcef,d_force,sizeof(float)*n*3,cudaMemcpyDeviceToHost));
	CUDA_SAFE_CALL(cudaMemcpy(vla,d_vl,n3*sizeof(float),cudaMemcpyDeviceToHost));
	CUDA_SAFE_CALL(cudaMemcpy(&fxs,d_xs,sizeof(float),cudaMemcpyDeviceToHost));
	CUDA_SAFE_CALL(cudaMemcpy(&ekinaux,d_ekin,sizeof(float),cudaMemcpyDeviceToHost));
	CUDA_SAFE_CALL(cudaMemcpy(&fmtemp,d_mtemp,sizeof(float),cudaMemcpyDeviceToHost));
	CUDA_SAFE_CALL(cudaMemcpy(&fmpres,d_mpres,sizeof(float),cudaMemcpyDeviceToHost));
	CUDA_SAFE_CALL(cudaMemcpy(vec,d_x,n*sizeof(VG_XVEC),cudaMemcpyDeviceToHost));
    CUDA_SAFE_CALL(cudaFree(d_vl));
    CUDA_SAFE_CALL(cudaFree(d_amass));
    CUDA_SAFE_CALL(cudaFree(d_atypemat));
	CUDA_SAFE_CALL(cudaFree(d_xs));
	CUDA_SAFE_CALL(cudaFree(d_ekin));
	CUDA_SAFE_CALL(cudaFree(d_mtemp));
	CUDA_SAFE_CALL(cudaFree(d_mpres));
	CUDA_SAFE_CALL(cudaFree(d_ekin1));
    CUDA_SAFE_CALL(cudaFree(d_x));
    CUDA_SAFE_CALL(cudaFree(d_force));
#endif

	for(i=0;i<n;i++) for(j=0;j<3;j++) force[i*3+j]=(double) forcef[i*3+j];
    for(p=0;p<n3;p++) {
        *(vl+p) = (double) vla[p];
    }

	for(i=0;i<n;i++){
    	for(j=0;j<3;j++){
      	*(x+i*3+j)= (double)vec[i].r[j];
    	}
  	}

	*xs 	= (double) fxs;
	*ekin 	= (double) ekinaux;
	*mtemp 	= (double) fmtemp;
	*mpres 	= (double) fmpres;
/////////////////////////////////////////////////////////
// free allocated global memory


	//free(matrix);
	free(vec);
    free(forcef);
	free(vla);
	free(ekin1a);

}

